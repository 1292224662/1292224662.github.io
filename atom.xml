<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>fried-chicken的blog</title>
  
  <subtitle>蒟蒻的ACM笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fried-chicken.top/"/>
  <updated>2019-05-29T18:08:15.523Z</updated>
  <id>http://fried-chicken.top/</id>
  
  <author>
    <name>fried-chicken</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>B：兑换零钱</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/Uznly-B/"/>
    <id>http://fried-chicken.top/[object Object]/Uznly-B/</id>
    <published>2019-05-29T18:03:56.000Z</published>
    <updated>2019-05-29T18:08:15.523Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(<font color="red">-2</font>) at 2:39; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/Uznly-B/1.jpg" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>emmmm初看感觉不好做，所以放到了很后面才去写这道题</p><p>试着拿背包的方法写了一点，发现似乎改一改就可以达成题目要求了</p><p>具体来说，考虑前i件物品，价值为j（分），那么dp[i][j]是dp[i-1][j]和dp[i][j-1]的加和，所以按照背包来写就可以了，记得取模</p><p>再感叹一下，真是挺裸的一道题，被我做的还挺费劲，还是要多练习呐</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dp[<span class="number">15</span>][<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="keyword">int</span> money[<span class="number">14</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">50</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">500</span>,<span class="number">1000</span>,<span class="number">2000</span>,<span class="number">5000</span>,<span class="number">10000</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">13</span>;i++)</span><br><span class="line">        dp[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">13</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">100000</span>;j++) &#123;</span><br><span class="line">            dp[i][j]=dp[i<span class="number">-1</span>][j];</span><br><span class="line">            <span class="keyword">if</span>(j&gt;=money[i])&#123;</span><br><span class="line">                dp[i][j]+=dp[i][j-money[i]];</span><br><span class="line">                dp[i][j]%=mod;</span><br><span class="line">            &#125;</span><br><span class="line">            dp[i][j]%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dp[<span class="number">13</span>][n]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(&lt;font color=&quot;red&quot;&gt;-2&lt;/font&gt;) at 2:39; &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;header
      
    
    </summary>
    
      <category term="2019中南林业科技大学校赛" scheme="http://fried-chicken.top/categories/2019%E4%B8%AD%E5%8D%97%E6%9E%97%E4%B8%9A%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B/"/>
    
      <category term="B：兑换零钱" scheme="http://fried-chicken.top/categories/2019%E4%B8%AD%E5%8D%97%E6%9E%97%E4%B8%9A%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B/B%EF%BC%9A%E5%85%91%E6%8D%A2%E9%9B%B6%E9%92%B1/"/>
    
    
      <category term="dp" scheme="http://fried-chicken.top/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>A：链表的合并</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/Uznly-A/"/>
    <id>http://fried-chicken.top/[object Object]/Uznly-A/</id>
    <published>2019-05-29T17:50:56.000Z</published>
    <updated>2019-05-29T17:59:57.690Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+<font color="red"></font>) at 0:16; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/Uznly-A/1.jpg" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>这是什么鬼题啊hhhhh</p><p>出题人不知道评测机不具备识别链表的功能的🐎</p><p>还是说这就是出题人的意图？</p><p>emmmmm不管了，反正随便排个序就AC了，下一个</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">30</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">31</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">30</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a[i];</span><br><span class="line">        <span class="keyword">if</span>(i!=<span class="number">30</span>)</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">' '</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+&lt;font color=&quot;red&quot;&gt;&lt;/font&gt;) at 0:16; &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="2019中南林业科技大学校赛" scheme="http://fried-chicken.top/categories/2019%E4%B8%AD%E5%8D%97%E6%9E%97%E4%B8%9A%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B/"/>
    
      <category term="A：链表的合并" scheme="http://fried-chicken.top/categories/2019%E4%B8%AD%E5%8D%97%E6%9E%97%E4%B8%9A%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B/A%EF%BC%9A%E9%93%BE%E8%A1%A8%E7%9A%84%E5%90%88%E5%B9%B6/"/>
    
    
      <category term="水题" scheme="http://fried-chicken.top/tags/%E6%B0%B4%E9%A2%98/"/>
    
      <category term="排序" scheme="http://fried-chicken.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>A：链表的合并</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/Uznly-E/"/>
    <id>http://fried-chicken.top/[object Object]/Uznly-E/</id>
    <published>2019-05-29T17:50:56.000Z</published>
    <updated>2019-05-29T18:42:24.385Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+<font color="red"></font>) at 0:16; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/Uznly-E/1.jpg" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>这题还是蛮有意思的，别人似乎用的是进制转换来做的，但我并没有很理解他们的做法，所以来说说我的吧</p><p>考虑天平的两侧相当于是加减两种运算，我们以样例中w=3的情况为里，对于满足题意的m，可以表示为：</p><p><img src="/[object Object]/Uznly-E/2.png" alt="2"></p><p>可以看到，经过步步化简之后（看不懂化简过程可以考虑重修级数23333），我们发现一个满足题意的m和另一个满足题意的m’之间有关系，由于最后一个表达式中的第一项实际取值为-1、1、0三者之一，这种关系可以表述为：</p><p>如果m为一个满足题意的数，那么m、m+1、m-1中一定有一个是另一个满足题意的数m’的3倍（一般的，也就是w倍）</p><p>上述推导实际上指出了m之间的递推关系，那么按照套路，有了递推关系，加上一个递推起点就可以了，那么显然，我们可以选择1作为一个递推的起点。</p><p>对于给出的一个数字，要想判断它是否满足条件，只需看它能不能回推到1即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tmp,w,m;</span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;w,&amp;m);</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(m)&#123;</span><br><span class="line">            <span class="keyword">if</span>((m<span class="number">-1</span>)%w==<span class="number">0</span>)&#123;</span><br><span class="line">                m=(m<span class="number">-1</span>)/w;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>((m+<span class="number">1</span>)%w==<span class="number">0</span>)&#123;</span><br><span class="line">                m=(m+<span class="number">1</span>)/w;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(m%w)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">                    flag=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    m/=w;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+&lt;font color=&quot;red&quot;&gt;&lt;/font&gt;) at 0:16; &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="2019中南林业科技大学校赛" scheme="http://fried-chicken.top/categories/2019%E4%B8%AD%E5%8D%97%E6%9E%97%E4%B8%9A%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B/"/>
    
      <category term="A：链表的合并" scheme="http://fried-chicken.top/categories/2019%E4%B8%AD%E5%8D%97%E6%9E%97%E4%B8%9A%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B/A%EF%BC%9A%E9%93%BE%E8%A1%A8%E7%9A%84%E5%90%88%E5%B9%B6/"/>
    
    
      <category term="水题" scheme="http://fried-chicken.top/tags/%E6%B0%B4%E9%A2%98/"/>
    
      <category term="排序" scheme="http://fried-chicken.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>D:最大的湖</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/Uznly-D/"/>
    <id>http://fried-chicken.top/[object Object]/Uznly-D/</id>
    <published>2019-05-29T17:50:56.000Z</published>
    <updated>2019-05-29T18:23:14.939Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+<font color="red"></font>) at 1:17; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/Uznly-D/1.jpg" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>dfs的板子题了吧算是</p><p>甚至我能猜到这题是从《挑战程序设计竞赛》中直接搬过来的，那道题除了湖是八连通的，并且要求的是湖的个数，剩下的和这题一模一样</p><p>所以dfs即可，一遍就A了还是很舒服的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> tmp1,tmp2;</span><br><span class="line"><span class="keyword">int</span> mp[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( i&lt;<span class="number">1</span>||i&gt;n||j&lt;<span class="number">1</span>||j&gt;m||mp[i][j]==<span class="number">0</span>||vis[i][j]==<span class="number">1</span> )</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!ok(i,j))&#123;</span><br><span class="line">        vis[i][j]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[i][j]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    ans+=dfs(i+<span class="number">1</span>,j);</span><br><span class="line">    ans+=dfs(i<span class="number">-1</span>,j);</span><br><span class="line">    ans+=dfs(i,j+<span class="number">1</span>);</span><br><span class="line">    ans+=dfs(i,j<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;tmp1&gt;&gt;tmp2;</span><br><span class="line">        mp[tmp1][tmp2]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            ans=max(ans,dfs(i,j));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+&lt;font color=&quot;red&quot;&gt;&lt;/font&gt;) at 1:17; &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="2019中南林业科技大学校赛" scheme="http://fried-chicken.top/categories/2019%E4%B8%AD%E5%8D%97%E6%9E%97%E4%B8%9A%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B/"/>
    
      <category term="D:最大的湖" scheme="http://fried-chicken.top/categories/2019%E4%B8%AD%E5%8D%97%E6%9E%97%E4%B8%9A%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B/D-%E6%9C%80%E5%A4%A7%E7%9A%84%E6%B9%96/"/>
    
    
      <category term="水题" scheme="http://fried-chicken.top/tags/%E6%B0%B4%E9%A2%98/"/>
    
      <category term="dfs" scheme="http://fried-chicken.top/tags/dfs/"/>
    
  </entry>
  
  <entry>
    <title>C：神奇的进制转换</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/Uznly-C/"/>
    <id>http://fried-chicken.top/[object Object]/Uznly-C/</id>
    <published>2019-05-29T17:50:56.000Z</published>
    <updated>2019-05-29T18:17:54.551Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(<font color="red">-2</font>) at 3:12; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/Uznly-C/1.jpg" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>显然，这是一道防ak题</p><p>具体来说，这题一开始甚至没有告诉我们62进制用什么来表示？还是答疑区有人问了之后才告诉我们是A~Z、a~z，出题人怕不是觉得这题反正没人做，随便出成什么样子都行？</p><p>但没想到这道防ak题惨遭羞辱，被将近20个人血过hhhhhhh</p><p>我看别的大佬的代码，有不少是手写的，也就七八十行，是直接在两种进制之间转换。</p><p>而我就比较菜了，抄了个板子，写了200+行，是先把原数转换成十进制，再转换到目标进制的orz</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> T,m,n;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">400</span>];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9999</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 1000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DLEN 4</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BigNum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> a[MAXSIZE];    <span class="comment">//可以控制大数的位数</span></span><br><span class="line">    <span class="keyword">int</span> len;       <span class="comment">//大数长度</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    BigNum()&#123; len = <span class="number">1</span>;<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a)); &#125;   <span class="comment">//构造函数</span></span><br><span class="line">    BigNum(<span class="keyword">const</span> <span class="keyword">int</span>);       <span class="comment">//将一个int类型的变量转化为大数</span></span><br><span class="line">    BigNum(<span class="keyword">const</span> <span class="keyword">char</span>*);     <span class="comment">//将一个字符串类型的变量转化为大数</span></span><br><span class="line">    BigNum(<span class="keyword">const</span> BigNum &amp;);  <span class="comment">//拷贝构造函数</span></span><br><span class="line">    BigNum &amp;<span class="keyword">operator</span>=(<span class="keyword">const</span> BigNum &amp;);   <span class="comment">//重载赋值运算符，大数之间进行赋值运算</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">friend</span> istream&amp; <span class="keyword">operator</span>&gt;&gt;(istream&amp;,  BigNum&amp;);   <span class="comment">//重载输入运算符</span></span><br><span class="line">    <span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp;,  BigNum&amp;);   <span class="comment">//重载输出运算符</span></span><br><span class="line"> </span><br><span class="line">    BigNum <span class="keyword">operator</span>+(<span class="keyword">const</span> BigNum &amp;) <span class="keyword">const</span>;   <span class="comment">//重载加法运算符，两个大数之间的相加运算</span></span><br><span class="line">    BigNum <span class="keyword">operator</span>-(<span class="keyword">const</span> BigNum &amp;) <span class="keyword">const</span>;   <span class="comment">//重载减法运算符，两个大数之间的相减运算</span></span><br><span class="line">    BigNum <span class="keyword">operator</span>*(<span class="keyword">const</span> BigNum &amp;) <span class="keyword">const</span>;   <span class="comment">//重载乘法运算符，两个大数之间的相乘运算</span></span><br><span class="line">    BigNum <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">int</span>   &amp;) <span class="keyword">const</span>;    <span class="comment">//重载除法运算符，大数对一个整数进行相除运算</span></span><br><span class="line"> </span><br><span class="line">    BigNum <span class="keyword">operator</span>^(<span class="keyword">const</span> <span class="keyword">int</span>  &amp;) <span class="keyword">const</span>;    <span class="comment">//大数的n次方运算</span></span><br><span class="line">    <span class="keyword">int</span>    <span class="keyword">operator</span>%(<span class="keyword">const</span> <span class="keyword">int</span>  &amp;) <span class="keyword">const</span>;    <span class="comment">//大数对一个int类型的变量进行取模运算</span></span><br><span class="line">    <span class="keyword">bool</span>   <span class="keyword">operator</span>&gt;(<span class="keyword">const</span> BigNum &amp; T)<span class="keyword">const</span>;   <span class="comment">//大数和另一个大数的大小比较</span></span><br><span class="line">    <span class="keyword">bool</span>   <span class="keyword">operator</span>&gt;(<span class="keyword">const</span> <span class="keyword">int</span> &amp; t)<span class="keyword">const</span>;      <span class="comment">//大数和一个int类型的变量的大小比较</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>;       <span class="comment">//输出大数</span></span><br><span class="line">&#125;;</span><br><span class="line">BigNum::BigNum(<span class="keyword">const</span> <span class="keyword">int</span> b)     <span class="comment">//将一个int类型的变量转化为大数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> c,d = b;</span><br><span class="line">    len = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="keyword">while</span>(d &gt; MAXN)</span><br><span class="line">    &#123;</span><br><span class="line">        c = d - (d / (MAXN + <span class="number">1</span>)) * (MAXN + <span class="number">1</span>);</span><br><span class="line">        d = d / (MAXN + <span class="number">1</span>);</span><br><span class="line">        a[len++] = c;</span><br><span class="line">    &#125;</span><br><span class="line">    a[len++] = d;</span><br><span class="line">&#125;</span><br><span class="line">BigNum::BigNum(<span class="keyword">const</span> BigNum &amp; T) : len(T.len)  <span class="comment">//拷贝构造函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span> ; i &lt; len ; i++)</span><br><span class="line">        a[i] = T.a[i];</span><br><span class="line">&#125;</span><br><span class="line">BigNum &amp; BigNum::<span class="keyword">operator</span>=(<span class="keyword">const</span> BigNum &amp; n)   <span class="comment">//重载赋值运算符，大数之间进行赋值运算</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    len = n.len;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span> ; i &lt; len ; i++)</span><br><span class="line">        a[i] = n.a[i];</span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BigNum BigNum::<span class="keyword">operator</span>+(<span class="keyword">const</span> BigNum &amp; T) <span class="keyword">const</span>   <span class="comment">//两个大数之间的相加运算</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">BigNum <span class="title">t</span><span class="params">(*<span class="keyword">this</span>)</span></span>;</span><br><span class="line">    <span class="keyword">int</span> i,big;      <span class="comment">//位数</span></span><br><span class="line">    big = T.len &gt; len ? T.len : len;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span> ; i &lt; big ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t.a[i] +=T.a[i];</span><br><span class="line">        <span class="keyword">if</span>(t.a[i] &gt; MAXN)</span><br><span class="line">        &#123;</span><br><span class="line">            t.a[i + <span class="number">1</span>]++;</span><br><span class="line">            t.a[i] -=MAXN+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(t.a[big] != <span class="number">0</span>)</span><br><span class="line">        t.len = big + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        t.len = big;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line">BigNum BigNum::<span class="keyword">operator</span>-(<span class="keyword">const</span> BigNum &amp; T) <span class="keyword">const</span>   <span class="comment">//两个大数之间的相减运算</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,big;</span><br><span class="line">    <span class="keyword">bool</span> flag;</span><br><span class="line">    BigNum t1,t2;</span><br><span class="line">    <span class="keyword">if</span>(*<span class="keyword">this</span>&gt;T)</span><br><span class="line">    &#123;</span><br><span class="line">        t1=*<span class="keyword">this</span>;</span><br><span class="line">        t2=T;</span><br><span class="line">        flag=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        t1=T;</span><br><span class="line">        t2=*<span class="keyword">this</span>;</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    big=t1.len;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span> ; i &lt; big ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(t1.a[i] &lt; t2.a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            j = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(t1.a[j] == <span class="number">0</span>)</span><br><span class="line">                j++;</span><br><span class="line">            t1.a[j--]--;</span><br><span class="line">            <span class="keyword">while</span>(j &gt; i)</span><br><span class="line">                t1.a[j--] += MAXN;</span><br><span class="line">            t1.a[i] += MAXN + <span class="number">1</span> - t2.a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            t1.a[i] -= t2.a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    t1.len = big;</span><br><span class="line">    <span class="keyword">while</span>(t1.a[len - <span class="number">1</span>] == <span class="number">0</span> &amp;&amp; t1.len &gt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        t1.len--;</span><br><span class="line">        big--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)</span><br><span class="line">        t1.a[big<span class="number">-1</span>]=<span class="number">0</span>-t1.a[big<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">return</span> t1;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">BigNum BigNum::<span class="keyword">operator</span>*(<span class="keyword">const</span> BigNum &amp; T) <span class="keyword">const</span>   <span class="comment">//两个大数之间的相乘运算</span></span><br><span class="line">&#123;</span><br><span class="line">    BigNum ret;</span><br><span class="line">    <span class="keyword">int</span> i,j,up;</span><br><span class="line">    <span class="keyword">int</span> temp,temp1;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span> ; i &lt; len ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        up = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span> ; j &lt; T.len ; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            temp = a[i] * T.a[j] + ret.a[i + j] + up;</span><br><span class="line">            <span class="keyword">if</span>(temp &gt; MAXN)</span><br><span class="line">            &#123;</span><br><span class="line">                temp1 = temp - temp / (MAXN + <span class="number">1</span>) * (MAXN + <span class="number">1</span>);</span><br><span class="line">                up = temp / (MAXN + <span class="number">1</span>);</span><br><span class="line">                ret.a[i + j] = temp1;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                up = <span class="number">0</span>;</span><br><span class="line">                ret.a[i + j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(up != <span class="number">0</span>)</span><br><span class="line">            ret.a[i + j] = up;</span><br><span class="line">    &#125;</span><br><span class="line">    ret.len = i + j;</span><br><span class="line">    <span class="keyword">while</span>(ret.a[ret.len - <span class="number">1</span>] == <span class="number">0</span> &amp;&amp; ret.len &gt; <span class="number">1</span>)</span><br><span class="line">        ret.len--;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line">BigNum BigNum::<span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">int</span> &amp; b) <span class="keyword">const</span>   <span class="comment">//大数对一个整数进行相除运算</span></span><br><span class="line">&#123;</span><br><span class="line">    BigNum ret;</span><br><span class="line">    <span class="keyword">int</span> i,down = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = len - <span class="number">1</span> ; i &gt;= <span class="number">0</span> ; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        ret.a[i] = (a[i] + down * (MAXN + <span class="number">1</span>)) / b;</span><br><span class="line">        down = a[i] + down * (MAXN + <span class="number">1</span>) - ret.a[i] * b;</span><br><span class="line">    &#125;</span><br><span class="line">    ret.len = len;</span><br><span class="line">    <span class="keyword">while</span>(ret.a[ret.len - <span class="number">1</span>] == <span class="number">0</span> &amp;&amp; ret.len &gt; <span class="number">1</span>)</span><br><span class="line">        ret.len--;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> BigNum::<span class="keyword">operator</span> %(<span class="keyword">const</span> <span class="keyword">int</span> &amp; b) <span class="keyword">const</span>    <span class="comment">//大数对一个int类型的变量进行取模运算</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> i,d=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = len<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        d = ((d * (MAXN+<span class="number">1</span>))% b + a[i])% b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> BigNum::<span class="keyword">operator</span>&gt;(<span class="keyword">const</span> BigNum &amp; T) <span class="keyword">const</span>   <span class="comment">//大数和另一个大数的大小比较</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> ln;</span><br><span class="line">    <span class="keyword">if</span>(len &gt; T.len)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(len == T.len)</span><br><span class="line">    &#123;</span><br><span class="line">        ln = len - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(a[ln] == T.a[ln] &amp;&amp; ln &gt;= <span class="number">0</span>)</span><br><span class="line">            ln--;</span><br><span class="line">        <span class="keyword">if</span>(ln &gt;= <span class="number">0</span> &amp;&amp; a[ln] &gt; T.a[ln])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> BigNum::<span class="keyword">operator</span> &gt;(<span class="keyword">const</span> <span class="keyword">int</span> &amp; t) <span class="keyword">const</span>    <span class="comment">//大数和一个int类型的变量的大小比较</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">BigNum <span class="title">b</span><span class="params">(t)</span></span>;</span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BigNum<span class="title">f</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>)</span><br><span class="line"><span class="keyword">return</span> ch-<span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(ch&gt;=<span class="string">'A'</span>&amp;&amp;ch&lt;=<span class="string">'Z'</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">10</span>+ch-<span class="string">'A'</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">36</span>+ch-<span class="string">'a'</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">g</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;=<span class="number">9</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'0'</span>+x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x&lt;=<span class="number">35</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> (x<span class="number">-10</span>)+<span class="string">'A'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x<span class="number">-36</span>)+<span class="string">'a'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">BigNum num;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">300000</span>],p;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,a+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(a+<span class="number">1</span>)==<span class="number">1</span>&amp;&amp;a[<span class="number">1</span>]==<span class="string">'0'</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;a[i];i++)&#123;</span><br><span class="line">num=num*m+f(a[i]);</span><br><span class="line">&#125;</span><br><span class="line">p=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">ans[p++]=num%n;</span><br><span class="line">num=num/n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=p<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="built_in">putchar</span>(g(ans[i]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(&lt;font color=&quot;red&quot;&gt;-2&lt;/font&gt;) at 3:12; &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;header
      
    
    </summary>
    
      <category term="2019中南林业科技大学校赛" scheme="http://fried-chicken.top/categories/2019%E4%B8%AD%E5%8D%97%E6%9E%97%E4%B8%9A%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B/"/>
    
      <category term="C：神奇的进制转换" scheme="http://fried-chicken.top/categories/2019%E4%B8%AD%E5%8D%97%E6%9E%97%E4%B8%9A%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B/C%EF%BC%9A%E7%A5%9E%E5%A5%87%E7%9A%84%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
    
      <category term="模拟" scheme="http://fried-chicken.top/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="大数" scheme="http://fried-chicken.top/tags/%E5%A4%A7%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Uznly-G</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/Uznly-G/"/>
    <id>http://fried-chicken.top/[object Object]/Uznly-G/</id>
    <published>2019-05-29T17:45:49.000Z</published>
    <updated>2019-05-29T17:45:49.025Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Uznly-F</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/Uznly-F/"/>
    <id>http://fried-chicken.top/[object Object]/Uznly-F/</id>
    <published>2019-05-29T17:45:42.000Z</published>
    <updated>2019-05-29T17:45:42.561Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>总结</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/Uznly/"/>
    <id>http://fried-chicken.top/[object Object]/Uznly/</id>
    <published>2019-05-29T17:28:28.000Z</published>
    <updated>2019-05-29T17:53:21.043Z</updated>
    
    <content type="html"><![CDATA[<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="/[object Object]/Uznly/1.jpg" alt="1"></p><p>怎么说呢，第一次ak，还是蛮开心的hhhhhhhh</p><p>但侧面也反映了这个比赛真的好水啊，感觉这可能是一个acm弱校？<br>甚至感觉出题人水平没有我高2333（膨胀）</p><p>当然了，美中不足的是罚时爆炸性的高orz，因为最开始只是说随便看一看，甚至在中间还吃了个外卖，罚时再少一点就好看了www</p><h3 id="比赛网址"><a href="#比赛网址" class="headerlink" title="比赛网址"></a>比赛网址</h3><p><a href="https://ac.nowcoder.com/acm/contest/910#question" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/910#question</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/[object Object]/Uznly/1.jpg&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;怎么说呢，第一次ak，还是蛮
      
    
    </summary>
    
      <category term="2019中南林业科技大学校赛" scheme="http://fried-chicken.top/categories/2019%E4%B8%AD%E5%8D%97%E6%9E%97%E4%B8%9A%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B/"/>
    
      <category term="总结" scheme="http://fried-chicken.top/categories/2019%E4%B8%AD%E5%8D%97%E6%9E%97%E4%B8%9A%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="总结" scheme="http://fried-chicken.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>C. 良心出题人又来啦 ！</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/rating2-1-c/"/>
    <id>http://fried-chicken.top/[object Object]/rating2-1-c/</id>
    <published>2019-04-20T18:07:56.000Z</published>
    <updated>2019-04-20T18:07:36.858Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="red">TLE</font>(+3); </strong></p><p><strong> 补题状态：<font color="green">AC</font>(+1); </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/rating2-1-c/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>这题做得我这次比赛心态很差……看到大家一个个都A了这道题，自己却怎么也想不到方法，贼难受</p><p>赛后才知道，这题过了的大部分是用了线性筛…..我也想过，但感觉3e7的数据量铁定MLE啊，于是并没有写</p><p>结果！3e7的int数组，居然正好是127MB左右？？？？？然后大家就都这么莽过了？？？</p><p>但看出题人的意思，似乎这并不是他的本意？搞不清楚了orz</p><p>赛后补题，为了表达我对线性筛的深仇大恨，我写了一个区间打表，每100000存一个数据，然后对于每次询问的l、r，我一次要处理的数据运算量就不会超过2e5了，可喜可贺</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打表程序省略</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> s[<span class="number">400</span>];</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(b==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line"><span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n=<span class="built_in">sqrt</span>(p);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n+<span class="number">1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(p%i)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">1</span>;a*a&lt;=r;a++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> b=a;;b++)&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tmp=(<span class="keyword">long</span> <span class="keyword">long</span>)a*a+b*b;</span><br><span class="line"><span class="keyword">if</span>(tmp&lt;l)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(tmp&gt;r)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(gcd(b,a)==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span>(is_prime(tmp))&#123;</span><br><span class="line"><span class="comment">//cout&lt;&lt;tmp&lt;&lt;endl;</span></span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">s[<span class="number">1</span>]=<span class="number">4784</span>;</span><br><span class="line">s[<span class="number">2</span>]=<span class="number">4194</span>;</span><br><span class="line">s[<span class="number">3</span>]=<span class="number">4003</span>;</span><br><span class="line">s[<span class="number">4</span>]=<span class="number">3920</span>;</span><br><span class="line">s[<span class="number">5</span>]=<span class="number">3831</span>;</span><br><span class="line">s[<span class="number">6</span>]=<span class="number">3791</span>;</span><br><span class="line">s[<span class="number">7</span>]=<span class="number">3726</span>;</span><br><span class="line">s[<span class="number">8</span>]=<span class="number">3667</span>;</span><br><span class="line">s[<span class="number">9</span>]=<span class="number">3669</span>;</span><br><span class="line">s[<span class="number">10</span>]=<span class="number">3591</span>;</span><br><span class="line">s[<span class="number">11</span>]=<span class="number">3642</span>;</span><br><span class="line">s[<span class="number">12</span>]=<span class="number">3612</span>;</span><br><span class="line">s[<span class="number">13</span>]=<span class="number">3532</span>;</span><br><span class="line">s[<span class="number">14</span>]=<span class="number">3554</span>;</span><br><span class="line">s[<span class="number">15</span>]=<span class="number">3507</span>;</span><br><span class="line">s[<span class="number">16</span>]=<span class="number">3500</span>;</span><br><span class="line">s[<span class="number">17</span>]=<span class="number">3517</span>;</span><br><span class="line">s[<span class="number">18</span>]=<span class="number">3449</span>;</span><br><span class="line">s[<span class="number">19</span>]=<span class="number">3496</span>;</span><br><span class="line">s[<span class="number">20</span>]=<span class="number">3432</span>;</span><br><span class="line">s[<span class="number">21</span>]=<span class="number">3462</span>;</span><br><span class="line">s[<span class="number">22</span>]=<span class="number">3406</span>;</span><br><span class="line">s[<span class="number">23</span>]=<span class="number">3394</span>;</span><br><span class="line">s[<span class="number">24</span>]=<span class="number">3376</span>;</span><br><span class="line">s[<span class="number">25</span>]=<span class="number">3378</span>;</span><br><span class="line">s[<span class="number">26</span>]=<span class="number">3445</span>;</span><br><span class="line">s[<span class="number">27</span>]=<span class="number">3362</span>;</span><br><span class="line">s[<span class="number">28</span>]=<span class="number">3368</span>;</span><br><span class="line">s[<span class="number">29</span>]=<span class="number">3371</span>;</span><br><span class="line">s[<span class="number">30</span>]=<span class="number">3305</span>;</span><br><span class="line">s[<span class="number">31</span>]=<span class="number">3369</span>;</span><br><span class="line">s[<span class="number">32</span>]=<span class="number">3386</span>;</span><br><span class="line">s[<span class="number">33</span>]=<span class="number">3336</span>;</span><br><span class="line">s[<span class="number">34</span>]=<span class="number">3320</span>;</span><br><span class="line">s[<span class="number">35</span>]=<span class="number">3302</span>;</span><br><span class="line">s[<span class="number">36</span>]=<span class="number">3273</span>;</span><br><span class="line">s[<span class="number">37</span>]=<span class="number">3356</span>;</span><br><span class="line">s[<span class="number">38</span>]=<span class="number">3286</span>;</span><br><span class="line">s[<span class="number">39</span>]=<span class="number">3307</span>;</span><br><span class="line">s[<span class="number">40</span>]=<span class="number">3284</span>;</span><br><span class="line">s[<span class="number">41</span>]=<span class="number">3327</span>;</span><br><span class="line">s[<span class="number">42</span>]=<span class="number">3291</span>;</span><br><span class="line">s[<span class="number">43</span>]=<span class="number">3247</span>;</span><br><span class="line">s[<span class="number">44</span>]=<span class="number">3251</span>;</span><br><span class="line">s[<span class="number">45</span>]=<span class="number">3306</span>;</span><br><span class="line">s[<span class="number">46</span>]=<span class="number">3241</span>;</span><br><span class="line">s[<span class="number">47</span>]=<span class="number">3278</span>;</span><br><span class="line">s[<span class="number">48</span>]=<span class="number">3231</span>;</span><br><span class="line">s[<span class="number">49</span>]=<span class="number">3271</span>;</span><br><span class="line">s[<span class="number">50</span>]=<span class="number">3248</span>;</span><br><span class="line">s[<span class="number">51</span>]=<span class="number">3239</span>;</span><br><span class="line">s[<span class="number">52</span>]=<span class="number">3184</span>;</span><br><span class="line">s[<span class="number">53</span>]=<span class="number">3227</span>;</span><br><span class="line">s[<span class="number">54</span>]=<span class="number">3204</span>;</span><br><span class="line">s[<span class="number">55</span>]=<span class="number">3235</span>;</span><br><span class="line">s[<span class="number">56</span>]=<span class="number">3210</span>;</span><br><span class="line">s[<span class="number">57</span>]=<span class="number">3216</span>;</span><br><span class="line">s[<span class="number">58</span>]=<span class="number">3191</span>;</span><br><span class="line">s[<span class="number">59</span>]=<span class="number">3211</span>;</span><br><span class="line">s[<span class="number">60</span>]=<span class="number">3222</span>;</span><br><span class="line">s[<span class="number">61</span>]=<span class="number">3193</span>;</span><br><span class="line">s[<span class="number">62</span>]=<span class="number">3206</span>;</span><br><span class="line">s[<span class="number">63</span>]=<span class="number">3234</span>;</span><br><span class="line">s[<span class="number">64</span>]=<span class="number">3157</span>;</span><br><span class="line">s[<span class="number">65</span>]=<span class="number">3149</span>;</span><br><span class="line">s[<span class="number">66</span>]=<span class="number">3191</span>;</span><br><span class="line">s[<span class="number">67</span>]=<span class="number">3188</span>;</span><br><span class="line">s[<span class="number">68</span>]=<span class="number">3193</span>;</span><br><span class="line">s[<span class="number">69</span>]=<span class="number">3225</span>;</span><br><span class="line">s[<span class="number">70</span>]=<span class="number">3192</span>;</span><br><span class="line">s[<span class="number">71</span>]=<span class="number">3182</span>;</span><br><span class="line">s[<span class="number">72</span>]=<span class="number">3138</span>;</span><br><span class="line">s[<span class="number">73</span>]=<span class="number">3152</span>;</span><br><span class="line">s[<span class="number">74</span>]=<span class="number">3135</span>;</span><br><span class="line">s[<span class="number">75</span>]=<span class="number">3106</span>;</span><br><span class="line">s[<span class="number">76</span>]=<span class="number">3167</span>;</span><br><span class="line">s[<span class="number">77</span>]=<span class="number">3211</span>;</span><br><span class="line">s[<span class="number">78</span>]=<span class="number">3130</span>;</span><br><span class="line">s[<span class="number">79</span>]=<span class="number">3141</span>;</span><br><span class="line">s[<span class="number">80</span>]=<span class="number">3137</span>;</span><br><span class="line">s[<span class="number">81</span>]=<span class="number">3125</span>;</span><br><span class="line">s[<span class="number">82</span>]=<span class="number">3129</span>;</span><br><span class="line">s[<span class="number">83</span>]=<span class="number">3135</span>;</span><br><span class="line">s[<span class="number">84</span>]=<span class="number">3122</span>;</span><br><span class="line">s[<span class="number">85</span>]=<span class="number">3125</span>;</span><br><span class="line">s[<span class="number">86</span>]=<span class="number">3160</span>;</span><br><span class="line">s[<span class="number">87</span>]=<span class="number">3154</span>;</span><br><span class="line">s[<span class="number">88</span>]=<span class="number">3168</span>;</span><br><span class="line">s[<span class="number">89</span>]=<span class="number">3106</span>;</span><br><span class="line">s[<span class="number">90</span>]=<span class="number">3117</span>;</span><br><span class="line">s[<span class="number">91</span>]=<span class="number">3076</span>;</span><br><span class="line">s[<span class="number">92</span>]=<span class="number">3149</span>;</span><br><span class="line">s[<span class="number">93</span>]=<span class="number">3118</span>;</span><br><span class="line">s[<span class="number">94</span>]=<span class="number">3135</span>;</span><br><span class="line">s[<span class="number">95</span>]=<span class="number">3063</span>;</span><br><span class="line">s[<span class="number">96</span>]=<span class="number">3171</span>;</span><br><span class="line">s[<span class="number">97</span>]=<span class="number">3091</span>;</span><br><span class="line">s[<span class="number">98</span>]=<span class="number">3103</span>;</span><br><span class="line">s[<span class="number">99</span>]=<span class="number">3099</span>;</span><br><span class="line">s[<span class="number">100</span>]=<span class="number">3075</span>;</span><br><span class="line">s[<span class="number">101</span>]=<span class="number">3087</span>;</span><br><span class="line">s[<span class="number">102</span>]=<span class="number">3126</span>;</span><br><span class="line">s[<span class="number">103</span>]=<span class="number">3071</span>;</span><br><span class="line">s[<span class="number">104</span>]=<span class="number">3086</span>;</span><br><span class="line">s[<span class="number">105</span>]=<span class="number">3114</span>;</span><br><span class="line">s[<span class="number">106</span>]=<span class="number">3074</span>;</span><br><span class="line">s[<span class="number">107</span>]=<span class="number">3101</span>;</span><br><span class="line">s[<span class="number">108</span>]=<span class="number">3069</span>;</span><br><span class="line">s[<span class="number">109</span>]=<span class="number">3091</span>;</span><br><span class="line">s[<span class="number">110</span>]=<span class="number">3080</span>;</span><br><span class="line">s[<span class="number">111</span>]=<span class="number">3080</span>;</span><br><span class="line">s[<span class="number">112</span>]=<span class="number">3101</span>;</span><br><span class="line">s[<span class="number">113</span>]=<span class="number">3067</span>;</span><br><span class="line">s[<span class="number">114</span>]=<span class="number">3111</span>;</span><br><span class="line">s[<span class="number">115</span>]=<span class="number">3079</span>;</span><br><span class="line">s[<span class="number">116</span>]=<span class="number">3117</span>;</span><br><span class="line">s[<span class="number">117</span>]=<span class="number">3093</span>;</span><br><span class="line">s[<span class="number">118</span>]=<span class="number">3089</span>;</span><br><span class="line">s[<span class="number">119</span>]=<span class="number">3103</span>;</span><br><span class="line">s[<span class="number">120</span>]=<span class="number">3073</span>;</span><br><span class="line">s[<span class="number">121</span>]=<span class="number">3040</span>;</span><br><span class="line">s[<span class="number">122</span>]=<span class="number">3054</span>;</span><br><span class="line">s[<span class="number">123</span>]=<span class="number">3122</span>;</span><br><span class="line">s[<span class="number">124</span>]=<span class="number">3079</span>;</span><br><span class="line">s[<span class="number">125</span>]=<span class="number">3021</span>;</span><br><span class="line">s[<span class="number">126</span>]=<span class="number">3024</span>;</span><br><span class="line">s[<span class="number">127</span>]=<span class="number">3098</span>;</span><br><span class="line">s[<span class="number">128</span>]=<span class="number">3068</span>;</span><br><span class="line">s[<span class="number">129</span>]=<span class="number">3057</span>;</span><br><span class="line">s[<span class="number">130</span>]=<span class="number">3013</span>;</span><br><span class="line">s[<span class="number">131</span>]=<span class="number">3014</span>;</span><br><span class="line">s[<span class="number">132</span>]=<span class="number">3077</span>;</span><br><span class="line">s[<span class="number">133</span>]=<span class="number">3020</span>;</span><br><span class="line">s[<span class="number">134</span>]=<span class="number">3073</span>;</span><br><span class="line">s[<span class="number">135</span>]=<span class="number">3038</span>;</span><br><span class="line">s[<span class="number">136</span>]=<span class="number">3027</span>;</span><br><span class="line">s[<span class="number">137</span>]=<span class="number">3039</span>;</span><br><span class="line">s[<span class="number">138</span>]=<span class="number">3044</span>;</span><br><span class="line">s[<span class="number">139</span>]=<span class="number">3061</span>;</span><br><span class="line">s[<span class="number">140</span>]=<span class="number">3012</span>;</span><br><span class="line">s[<span class="number">141</span>]=<span class="number">2998</span>;</span><br><span class="line">s[<span class="number">142</span>]=<span class="number">3043</span>;</span><br><span class="line">s[<span class="number">143</span>]=<span class="number">3054</span>;</span><br><span class="line">s[<span class="number">144</span>]=<span class="number">3066</span>;</span><br><span class="line">s[<span class="number">145</span>]=<span class="number">3018</span>;</span><br><span class="line">s[<span class="number">146</span>]=<span class="number">3025</span>;</span><br><span class="line">s[<span class="number">147</span>]=<span class="number">3037</span>;</span><br><span class="line">s[<span class="number">148</span>]=<span class="number">3035</span>;</span><br><span class="line">s[<span class="number">149</span>]=<span class="number">3015</span>;</span><br><span class="line">s[<span class="number">150</span>]=<span class="number">3010</span>;</span><br><span class="line">s[<span class="number">151</span>]=<span class="number">3004</span>;</span><br><span class="line">s[<span class="number">152</span>]=<span class="number">3014</span>;</span><br><span class="line">s[<span class="number">153</span>]=<span class="number">3018</span>;</span><br><span class="line">s[<span class="number">154</span>]=<span class="number">2931</span>;</span><br><span class="line">s[<span class="number">155</span>]=<span class="number">2994</span>;</span><br><span class="line">s[<span class="number">156</span>]=<span class="number">3015</span>;</span><br><span class="line">s[<span class="number">157</span>]=<span class="number">3025</span>;</span><br><span class="line">s[<span class="number">158</span>]=<span class="number">3032</span>;</span><br><span class="line">s[<span class="number">159</span>]=<span class="number">3075</span>;</span><br><span class="line">s[<span class="number">160</span>]=<span class="number">3031</span>;</span><br><span class="line">s[<span class="number">161</span>]=<span class="number">2990</span>;</span><br><span class="line">s[<span class="number">162</span>]=<span class="number">2994</span>;</span><br><span class="line">s[<span class="number">163</span>]=<span class="number">3030</span>;</span><br><span class="line">s[<span class="number">164</span>]=<span class="number">2994</span>;</span><br><span class="line">s[<span class="number">165</span>]=<span class="number">3050</span>;</span><br><span class="line">s[<span class="number">166</span>]=<span class="number">2997</span>;</span><br><span class="line">s[<span class="number">167</span>]=<span class="number">2973</span>;</span><br><span class="line">s[<span class="number">168</span>]=<span class="number">3008</span>;</span><br><span class="line">s[<span class="number">169</span>]=<span class="number">3017</span>;</span><br><span class="line">s[<span class="number">170</span>]=<span class="number">3034</span>;</span><br><span class="line">s[<span class="number">171</span>]=<span class="number">2998</span>;</span><br><span class="line">s[<span class="number">172</span>]=<span class="number">2962</span>;</span><br><span class="line">s[<span class="number">173</span>]=<span class="number">3052</span>;</span><br><span class="line">s[<span class="number">174</span>]=<span class="number">2980</span>;</span><br><span class="line">s[<span class="number">175</span>]=<span class="number">2996</span>;</span><br><span class="line">s[<span class="number">176</span>]=<span class="number">3025</span>;</span><br><span class="line">s[<span class="number">177</span>]=<span class="number">3000</span>;</span><br><span class="line">s[<span class="number">178</span>]=<span class="number">2994</span>;</span><br><span class="line">s[<span class="number">179</span>]=<span class="number">2973</span>;</span><br><span class="line">s[<span class="number">180</span>]=<span class="number">3022</span>;</span><br><span class="line">s[<span class="number">181</span>]=<span class="number">2961</span>;</span><br><span class="line">s[<span class="number">182</span>]=<span class="number">2981</span>;</span><br><span class="line">s[<span class="number">183</span>]=<span class="number">3039</span>;</span><br><span class="line">s[<span class="number">184</span>]=<span class="number">2964</span>;</span><br><span class="line">s[<span class="number">185</span>]=<span class="number">2968</span>;</span><br><span class="line">s[<span class="number">186</span>]=<span class="number">2941</span>;</span><br><span class="line">s[<span class="number">187</span>]=<span class="number">3016</span>;</span><br><span class="line">s[<span class="number">188</span>]=<span class="number">2992</span>;</span><br><span class="line">s[<span class="number">189</span>]=<span class="number">3014</span>;</span><br><span class="line">s[<span class="number">190</span>]=<span class="number">2978</span>;</span><br><span class="line">s[<span class="number">191</span>]=<span class="number">2983</span>;</span><br><span class="line">s[<span class="number">192</span>]=<span class="number">3006</span>;</span><br><span class="line">s[<span class="number">193</span>]=<span class="number">2970</span>;</span><br><span class="line">s[<span class="number">194</span>]=<span class="number">2968</span>;</span><br><span class="line">s[<span class="number">195</span>]=<span class="number">2999</span>;</span><br><span class="line">s[<span class="number">196</span>]=<span class="number">2936</span>;</span><br><span class="line">s[<span class="number">197</span>]=<span class="number">2985</span>;</span><br><span class="line">s[<span class="number">198</span>]=<span class="number">2983</span>;</span><br><span class="line">s[<span class="number">199</span>]=<span class="number">2950</span>;</span><br><span class="line">s[<span class="number">200</span>]=<span class="number">3034</span>;</span><br><span class="line">s[<span class="number">201</span>]=<span class="number">2953</span>;</span><br><span class="line">s[<span class="number">202</span>]=<span class="number">2964</span>;</span><br><span class="line">s[<span class="number">203</span>]=<span class="number">2930</span>;</span><br><span class="line">s[<span class="number">204</span>]=<span class="number">2950</span>;</span><br><span class="line">s[<span class="number">205</span>]=<span class="number">2965</span>;</span><br><span class="line">s[<span class="number">206</span>]=<span class="number">2996</span>;</span><br><span class="line">s[<span class="number">207</span>]=<span class="number">2968</span>;</span><br><span class="line">s[<span class="number">208</span>]=<span class="number">2960</span>;</span><br><span class="line">s[<span class="number">209</span>]=<span class="number">2962</span>;</span><br><span class="line">s[<span class="number">210</span>]=<span class="number">2952</span>;</span><br><span class="line">s[<span class="number">211</span>]=<span class="number">2972</span>;</span><br><span class="line">s[<span class="number">212</span>]=<span class="number">2933</span>;</span><br><span class="line">s[<span class="number">213</span>]=<span class="number">3012</span>;</span><br><span class="line">s[<span class="number">214</span>]=<span class="number">2982</span>;</span><br><span class="line">s[<span class="number">215</span>]=<span class="number">3002</span>;</span><br><span class="line">s[<span class="number">216</span>]=<span class="number">2904</span>;</span><br><span class="line">s[<span class="number">217</span>]=<span class="number">2965</span>;</span><br><span class="line">s[<span class="number">218</span>]=<span class="number">2963</span>;</span><br><span class="line">s[<span class="number">219</span>]=<span class="number">2974</span>;</span><br><span class="line">s[<span class="number">220</span>]=<span class="number">3012</span>;</span><br><span class="line">s[<span class="number">221</span>]=<span class="number">2915</span>;</span><br><span class="line">s[<span class="number">222</span>]=<span class="number">2921</span>;</span><br><span class="line">s[<span class="number">223</span>]=<span class="number">2947</span>;</span><br><span class="line">s[<span class="number">224</span>]=<span class="number">2908</span>;</span><br><span class="line">s[<span class="number">225</span>]=<span class="number">2934</span>;</span><br><span class="line">s[<span class="number">226</span>]=<span class="number">2998</span>;</span><br><span class="line">s[<span class="number">227</span>]=<span class="number">2925</span>;</span><br><span class="line">s[<span class="number">228</span>]=<span class="number">2951</span>;</span><br><span class="line">s[<span class="number">229</span>]=<span class="number">2971</span>;</span><br><span class="line">s[<span class="number">230</span>]=<span class="number">2936</span>;</span><br><span class="line">s[<span class="number">231</span>]=<span class="number">2986</span>;</span><br><span class="line">s[<span class="number">232</span>]=<span class="number">2949</span>;</span><br><span class="line">s[<span class="number">233</span>]=<span class="number">2951</span>;</span><br><span class="line">s[<span class="number">234</span>]=<span class="number">2958</span>;</span><br><span class="line">s[<span class="number">235</span>]=<span class="number">2936</span>;</span><br><span class="line">s[<span class="number">236</span>]=<span class="number">2930</span>;</span><br><span class="line">s[<span class="number">237</span>]=<span class="number">2957</span>;</span><br><span class="line">s[<span class="number">238</span>]=<span class="number">2895</span>;</span><br><span class="line">s[<span class="number">239</span>]=<span class="number">2926</span>;</span><br><span class="line">s[<span class="number">240</span>]=<span class="number">2934</span>;</span><br><span class="line">s[<span class="number">241</span>]=<span class="number">2899</span>;</span><br><span class="line">s[<span class="number">242</span>]=<span class="number">2971</span>;</span><br><span class="line">s[<span class="number">243</span>]=<span class="number">3011</span>;</span><br><span class="line">s[<span class="number">244</span>]=<span class="number">2951</span>;</span><br><span class="line">s[<span class="number">245</span>]=<span class="number">2937</span>;</span><br><span class="line">s[<span class="number">246</span>]=<span class="number">2925</span>;</span><br><span class="line">s[<span class="number">247</span>]=<span class="number">2916</span>;</span><br><span class="line">s[<span class="number">248</span>]=<span class="number">2968</span>;</span><br><span class="line">s[<span class="number">249</span>]=<span class="number">2931</span>;</span><br><span class="line">s[<span class="number">250</span>]=<span class="number">2927</span>;</span><br><span class="line">s[<span class="number">251</span>]=<span class="number">2944</span>;</span><br><span class="line">s[<span class="number">252</span>]=<span class="number">2913</span>;</span><br><span class="line">s[<span class="number">253</span>]=<span class="number">2902</span>;</span><br><span class="line">s[<span class="number">254</span>]=<span class="number">2936</span>;</span><br><span class="line">s[<span class="number">255</span>]=<span class="number">2912</span>;</span><br><span class="line">s[<span class="number">256</span>]=<span class="number">2925</span>;</span><br><span class="line">s[<span class="number">257</span>]=<span class="number">2955</span>;</span><br><span class="line">s[<span class="number">258</span>]=<span class="number">2939</span>;</span><br><span class="line">s[<span class="number">259</span>]=<span class="number">2936</span>;</span><br><span class="line">s[<span class="number">260</span>]=<span class="number">2912</span>;</span><br><span class="line">s[<span class="number">261</span>]=<span class="number">2935</span>;</span><br><span class="line">s[<span class="number">262</span>]=<span class="number">2905</span>;</span><br><span class="line">s[<span class="number">263</span>]=<span class="number">2928</span>;</span><br><span class="line">s[<span class="number">264</span>]=<span class="number">2956</span>;</span><br><span class="line">s[<span class="number">265</span>]=<span class="number">2968</span>;</span><br><span class="line">s[<span class="number">266</span>]=<span class="number">2923</span>;</span><br><span class="line">s[<span class="number">267</span>]=<span class="number">2953</span>;</span><br><span class="line">s[<span class="number">268</span>]=<span class="number">2902</span>;</span><br><span class="line">s[<span class="number">269</span>]=<span class="number">2938</span>;</span><br><span class="line">s[<span class="number">270</span>]=<span class="number">2928</span>;</span><br><span class="line">s[<span class="number">271</span>]=<span class="number">2928</span>;</span><br><span class="line">s[<span class="number">272</span>]=<span class="number">2902</span>;</span><br><span class="line">s[<span class="number">273</span>]=<span class="number">2886</span>;</span><br><span class="line">s[<span class="number">274</span>]=<span class="number">2942</span>;</span><br><span class="line">s[<span class="number">275</span>]=<span class="number">2873</span>;</span><br><span class="line">s[<span class="number">276</span>]=<span class="number">2980</span>;</span><br><span class="line">s[<span class="number">277</span>]=<span class="number">2886</span>;</span><br><span class="line">s[<span class="number">278</span>]=<span class="number">2911</span>;</span><br><span class="line">s[<span class="number">279</span>]=<span class="number">2920</span>;</span><br><span class="line">s[<span class="number">280</span>]=<span class="number">2922</span>;</span><br><span class="line">s[<span class="number">281</span>]=<span class="number">2968</span>;</span><br><span class="line">s[<span class="number">282</span>]=<span class="number">2876</span>;</span><br><span class="line">s[<span class="number">283</span>]=<span class="number">2924</span>;</span><br><span class="line">s[<span class="number">284</span>]=<span class="number">2904</span>;</span><br><span class="line">s[<span class="number">285</span>]=<span class="number">2952</span>;</span><br><span class="line">s[<span class="number">286</span>]=<span class="number">2885</span>;</span><br><span class="line">s[<span class="number">287</span>]=<span class="number">2910</span>;</span><br><span class="line">s[<span class="number">288</span>]=<span class="number">2924</span>;</span><br><span class="line">s[<span class="number">289</span>]=<span class="number">2901</span>;</span><br><span class="line">s[<span class="number">290</span>]=<span class="number">2928</span>;</span><br><span class="line">s[<span class="number">291</span>]=<span class="number">2887</span>;</span><br><span class="line">s[<span class="number">292</span>]=<span class="number">2887</span>;</span><br><span class="line">s[<span class="number">293</span>]=<span class="number">2961</span>;</span><br><span class="line">s[<span class="number">294</span>]=<span class="number">2911</span>;</span><br><span class="line">s[<span class="number">295</span>]=<span class="number">2882</span>;</span><br><span class="line">s[<span class="number">296</span>]=<span class="number">2896</span>;</span><br><span class="line">s[<span class="number">297</span>]=<span class="number">2897</span>;</span><br><span class="line">s[<span class="number">298</span>]=<span class="number">2874</span>;</span><br><span class="line">s[<span class="number">299</span>]=<span class="number">2941</span>;</span><br><span class="line">s[<span class="number">300</span>]=<span class="number">2958</span>;</span><br><span class="line">s[<span class="number">301</span>]=<span class="number">2898</span>;</span><br><span class="line">s[<span class="number">302</span>]=<span class="number">2926</span>;</span><br><span class="line">s[<span class="number">303</span>]=<span class="number">2916</span>;</span><br><span class="line">s[<span class="number">304</span>]=<span class="number">2933</span>;</span><br><span class="line">s[<span class="number">305</span>]=<span class="number">2873</span>;</span><br><span class="line">s[<span class="number">306</span>]=<span class="number">2969</span>;</span><br><span class="line">s[<span class="number">307</span>]=<span class="number">2886</span>;</span><br><span class="line">s[<span class="number">308</span>]=<span class="number">2907</span>;</span><br><span class="line">s[<span class="number">309</span>]=<span class="number">2938</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;l&gt;&gt;r;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> ll=l/<span class="number">1e5</span>,rr=r/<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=ll+<span class="number">1</span>;i&lt;=rr;i++)&#123;</span><br><span class="line">ans+=s[i];</span><br><span class="line">&#125;</span><br><span class="line">ans+=solve(rr*<span class="number">1e5</span>,r);</span><br><span class="line">ans-=solve(ll*<span class="number">1e5</span>,l);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：&lt;font color=&quot;red&quot;&gt;TLE&lt;/font&gt;(+3); &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 补题状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+1); &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题
      
    
    </summary>
    
      <category term="大一下三月月赛" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/"/>
    
      <category term="C. 良心出题人又来啦 ！" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/C-%E8%89%AF%E5%BF%83%E5%87%BA%E9%A2%98%E4%BA%BA%E5%8F%88%E6%9D%A5%E5%95%A6-%EF%BC%81/"/>
    
    
      <category term="打表" scheme="http://fried-chicken.top/tags/%E6%89%93%E8%A1%A8/"/>
    
      <category term="数论" scheme="http://fried-chicken.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>D. 小D的递减序列</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/rating2-1-d/"/>
    <id>http://fried-chicken.top/[object Object]/rating2-1-d/</id>
    <published>2019-04-20T18:01:56.000Z</published>
    <updated>2019-04-20T18:01:56.228Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：Unattemped;</strong></p><p><strong> 补题状态：<font color="green">AC</font>(+3); </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/rating2-1-d/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>这题其实还是挺像之前的某道题的，所以思路就不说太多啦</p><p><a href="http://fried-chicken.top/categories/2018%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E8%B5%9B/J%EF%BC%9ALylist-%E4%B8%8E%E9%AD%94%E6%B3%95%E5%8D%A1%E7%89%8C-Episode-2/">某道题</a></p><p>特别注意，（a-b）%mod的形式是错的，因为会出现负数，所以一定要记得（a-b+mod）%mod！</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> Li[<span class="number">100010</span>][<span class="number">12</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> mod=<span class="number">1e9</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">lb</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> pos ,<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(pos&lt;=<span class="number">100001</span>)&#123;</span><br><span class="line">Li[pos][num]+=x;</span><br><span class="line">Li[pos][num]%=mod;</span><br><span class="line">pos+=lb(pos);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(pos)&#123;</span><br><span class="line">ans+=Li[pos][num];</span><br><span class="line">ans%=mod;</span><br><span class="line">pos-=lb(pos);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tmp;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;tmp);</span><br><span class="line">update(<span class="number">1</span>,tmp+<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=k;i++)&#123;</span><br><span class="line">update(i,tmp+<span class="number">1</span>,(mod+sum(i<span class="number">-1</span>,<span class="number">100005</span>)-sum(i<span class="number">-1</span>,tmp+<span class="number">1</span>))%mod);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum(k,<span class="number">100005</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：Unattemped;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 补题状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+3); &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; clas
      
    
    </summary>
    
      <category term="大一下三月月赛" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/"/>
    
      <category term="D. 小D的递减序列" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/D-%E5%B0%8FD%E7%9A%84%E9%80%92%E5%87%8F%E5%BA%8F%E5%88%97/"/>
    
    
      <category term="树状数组" scheme="http://fried-chicken.top/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
      <category term="线段树" scheme="http://fried-chicken.top/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="dp" scheme="http://fried-chicken.top/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>I. 魔法盒子</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/rating2-1-i/"/>
    <id>http://fried-chicken.top/[object Object]/rating2-1-i/</id>
    <published>2019-04-20T17:29:56.000Z</published>
    <updated>2019-04-20T17:57:11.273Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：Unattemped;</strong></p><p><strong> 补题状态：<font color="green">AC</font>(+7); </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/rating2-1-i/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>首先得承认的是。我这个程序写的并不好，因为emmmm，直接上图吧：</p><p><img src="/[object Object]/rating2-1-i/2.png" alt="1"></p><p>没错，这题时限1000ms，我998ms的速度通过了这道题……是真的很极限了orz。</p><p>从思路上来说还是很简单的，只要我们以n²的复杂度预处理好所有串的长度和魔法值，之后的q次询问我们就可以用二分来找到满足要求的最大长度值。</p><p>但问题是，这个过程到处都是问题，到处都在反套路，有很多和我们习惯不一样的写法，详见下面注释。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">6010</span>];</span><br><span class="line"><span class="keyword">int</span> T,l,r,bound,len;</span><br><span class="line"><span class="keyword">int</span> mp[<span class="number">6010</span>][<span class="number">6010</span>];</span><br><span class="line"><span class="comment">//mp[len][mid]表示以mid为中心，len为长度的串魔法值（如果len是偶数，我们规定考虑左侧的那个字符作为中间字符）</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">len=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">memset</span>(mp,<span class="number">-1</span>,<span class="keyword">sizeof</span>(mp));<span class="comment">//-1表示未访问</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;<span class="comment">//奇数长更新 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=len&amp;&amp;i-(j<span class="number">-1</span>)/<span class="number">2</span>&gt;=<span class="number">1</span>&amp;&amp;i+(j<span class="number">-1</span>)/<span class="number">2</span>&lt;=len;j+=<span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(j==<span class="number">1</span>)&#123;</span><br><span class="line">mp[<span class="number">1</span>][i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">mp[j][i]=<span class="built_in">abs</span>(s[i-(j<span class="number">-1</span>)/<span class="number">2</span>]-s[i+(j<span class="number">-1</span>)/<span class="number">2</span>])+mp[j<span class="number">-2</span>][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;<span class="comment">//偶数长更新 </span></span><br><span class="line">mp[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=len&amp;&amp;i+j/<span class="number">2</span>&lt;=len&amp;&amp;i+<span class="number">1</span>-j/<span class="number">2</span>;j+=<span class="number">2</span>)&#123;</span><br><span class="line">mp[j][i]=<span class="built_in">abs</span>(s[i+j/<span class="number">2</span>]-s[i+<span class="number">1</span>-j/<span class="number">2</span>])+mp[j<span class="number">-2</span>][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="comment">//以下是二分部分，本题最大的问题来了——题目要求在子串的头尾删等长的串！</span></span><br><span class="line"><span class="comment">//也就是说，如果询问子串长为8，我们二分得到的答案可能为5，这是不满足要求的</span></span><br><span class="line"><span class="comment">//怎么办呢？我们以询问串长的奇偶性分类讨论</span></span><br><span class="line"><span class="comment">//以奇数为例，任意的一个奇数可以表示为2*n+1，因此我们二分这个n，得到的答案就一定是奇数了</span></span><br><span class="line"><span class="comment">//偶数情况同理</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;l,&amp;r,&amp;bound);</span><br><span class="line"><span class="keyword">if</span>((r-l+<span class="number">1</span>)%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> lft=<span class="number">0</span>,rht=(r-l)/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(rht-lft&gt;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> mid=(lft+rht)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> magic;</span><br><span class="line">magic=mp[<span class="number">2</span>*mid+<span class="number">1</span>][(l+r)/<span class="number">2</span>];</span><br><span class="line"><span class="keyword">if</span>(magic!=<span class="number">-1</span>&amp;&amp;magic&lt;=bound)&#123;</span><br><span class="line">lft=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">rht=mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="number">2</span>*rht<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> lft=<span class="number">0</span>,rht=(r-l+<span class="number">1</span>)/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(rht-lft&gt;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> mid=(lft+rht)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> magic;</span><br><span class="line">magic=mp[<span class="number">2</span>*mid][(l+r<span class="number">-1</span>)/<span class="number">2</span>];</span><br><span class="line"><span class="keyword">if</span>(magic!=<span class="number">-1</span>&amp;&amp;magic&lt;=bound)&#123;</span><br><span class="line">lft=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">rht=mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="number">2</span>*rht<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：Unattemped;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 补题状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+7); &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; clas
      
    
    </summary>
    
      <category term="大一下三月月赛" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/"/>
    
      <category term="I. 魔法盒子" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/I-%E9%AD%94%E6%B3%95%E7%9B%92%E5%AD%90/"/>
    
    
      <category term="dp" scheme="http://fried-chicken.top/tags/dp/"/>
    
      <category term="二分" scheme="http://fried-chicken.top/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>E：争夺宇宙魔方</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/rating2-1-e/"/>
    <id>http://fried-chicken.top/[object Object]/rating2-1-e/</id>
    <published>2019-03-30T17:59:56.000Z</published>
    <updated>2019-03-30T18:03:27.072Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+<font color="red">1</font>) at 2:40; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/rating2-1-e/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>以宇宙魔方的所在地为原点，bfs求它到其它所有点的最短距离，只要他到某点的最短距离小于他到Carol的最短距离，就说明这个点上的敌人会先于Carol到达宇宙魔方处，因此这个点上的飞船数就要加到答案上，最后输出答案即可。</p><p>多组样例输入，记得初始化。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x;<span class="keyword">int</span> y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> movex[<span class="number">5</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> movey[<span class="number">5</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="built_in">queue</span>&lt;point&gt;  q;</span><br><span class="line">point beg;</span><br><span class="line">point psave;</span><br><span class="line">point carol;</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="keyword">char</span> mp[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> ene[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&gt;=<span class="number">1</span>&amp;&amp;x&lt;=n&amp;&amp;y&lt;=m&amp;&amp;y&gt;=<span class="number">1</span>&amp;&amp;mp[x][y]!=<span class="string">'T'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">bfs</span><span class="params">( )</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">point p=q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">psave.x=p.x+movex[i];</span><br><span class="line">psave.y=p.y+movey[i];</span><br><span class="line"><span class="keyword">if</span>( ok(psave.x,psave.y)&amp;&amp;!vis[psave.x][psave.y] )&#123;</span><br><span class="line">    q.push(psave);</span><br><span class="line">    dis[psave.x][psave.y]=min(dis[psave.x][psave.y],dis[p.x][p.y]+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">vis[psave.x][psave.y]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m))&#123;</span><br><span class="line"><span class="built_in">memset</span>(mp,<span class="number">0</span>,<span class="keyword">sizeof</span>(mp));</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="built_in">memset</span>(ene,<span class="number">0</span>,<span class="keyword">sizeof</span>(ene));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">100</span>;j++)</span><br><span class="line">dis[i][j]=<span class="number">1e7</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="keyword">char</span> tmp;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;tmp);</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'\n'</span>)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;tmp);</span><br><span class="line">mp[i][j]=tmp;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'E'</span>)&#123;</span><br><span class="line">beg.x=i,beg.y=j;</span><br><span class="line">dis[beg.x][beg.y]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'S'</span>)&#123;</span><br><span class="line">carol.x=i;carol.y=j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tmp&lt;=<span class="string">'9'</span>&amp;&amp;tmp&gt;=<span class="string">'1'</span>)&#123;</span><br><span class="line">ene[i][j]=tmp-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">q.push(beg);</span><br><span class="line">bfs();</span><br><span class="line"><span class="keyword">int</span> time=dis[carol.x][carol.y];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(ene[i][j]&amp;&amp;dis[i][j]&lt;=time)&#123;</span><br><span class="line">ans+=ene[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+&lt;font color=&quot;red&quot;&gt;1&lt;/font&gt;) at 2:40; &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;header
      
    
    </summary>
    
      <category term="大一下三月月赛" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/"/>
    
      <category term="E：争夺宇宙魔方" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/E%EF%BC%9A%E4%BA%89%E5%A4%BA%E5%AE%87%E5%AE%99%E9%AD%94%E6%96%B9/"/>
    
    
      <category term="bfs" scheme="http://fried-chicken.top/tags/bfs/"/>
    
      <category term="搜索" scheme="http://fried-chicken.top/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="最短路" scheme="http://fried-chicken.top/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>L：肥宅大哭.jpg</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/rating2-1-l/"/>
    <id>http://fried-chicken.top/[object Object]/rating2-1-l/</id>
    <published>2019-03-30T17:50:56.000Z</published>
    <updated>2019-03-30T17:55:43.158Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+<font color="red"></font>) at 1:00; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/rating2-1-l/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>emmm差点没仔细看题，把它当成一个两种费用的背包问题了orz。</p><p>照着题意模拟呗，话说我cmp函数里还考虑了难度相同的情况要优先做耗时短的，现在写题解的时候才发现题目里已经要求不会出现相同的题目难度了。</p><p>哦对，而且long long我开的好像也多余，int够用了，可以说是态度很诚恳地一道签到题了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">int</span> N,M;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ti</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> d;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> t;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(ti pre,ti aft)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(pre.d!=aft.d)</span><br><span class="line"><span class="keyword">return</span> pre.d&lt;aft.d;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> pre.t&lt;aft.t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ti a[<span class="number">110000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">int</span> sit=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tcur=<span class="number">0</span>;</span><br><span class="line">sit++;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;N&gt;&gt;M;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i].d);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i].t);</span><br><span class="line">&#125;</span><br><span class="line">sort(a+<span class="number">1</span>,a+<span class="number">1</span>+N,cmp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(tcur+a[i].t&lt;=M)&#123;</span><br><span class="line">ans++;</span><br><span class="line">tcur+=a[i].t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case %d: %lld\n"</span>,sit,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+&lt;font color=&quot;red&quot;&gt;&lt;/font&gt;) at 1:00; &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="大一下三月月赛" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/"/>
    
      <category term="L：肥宅大哭.jpg" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/L%EF%BC%9A%E8%82%A5%E5%AE%85%E5%A4%A7%E5%93%AD-jpg/"/>
    
    
      <category term="水题" scheme="http://fried-chicken.top/tags/%E6%B0%B4%E9%A2%98/"/>
    
      <category term="排序" scheme="http://fried-chicken.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="模拟" scheme="http://fried-chicken.top/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>A： Ervin and Joker</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/rating2-1-a/"/>
    <id>http://fried-chicken.top/[object Object]/rating2-1-a/</id>
    <published>2019-03-30T17:47:56.000Z</published>
    <updated>2019-03-30T17:47:21.557Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+<font color="red">4</font>) at 0:42; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/rating2-1-a/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>一开始疯狂读错题，疯狂瞎猜，疯狂WA。</p><p>后来冷静下来，认真的左右互搏手玩了几把，发现规律了，即n=0（没错，n居然可以为0！）、k=1且n%2=1的两种情况显然是先手输，除此之外的情况，只要先手从中间拿1或2个，使得剩下的石子被分成均匀的两堆，那么之后，先手只需要重复后手的动作，便一定可以获胜。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">if</span>(!n)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Joker"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">2</span>)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Ervin"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Joker"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Ervin"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+&lt;font color=&quot;red&quot;&gt;4&lt;/font&gt;) at 0:42; &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;header
      
    
    </summary>
    
      <category term="大一下三月月赛" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/"/>
    
      <category term="A： Ervin and Joker" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/A%EF%BC%9A-Ervin-and-Joker/"/>
    
    
      <category term="水题" scheme="http://fried-chicken.top/tags/%E6%B0%B4%E9%A2%98/"/>
    
      <category term="博弈" scheme="http://fried-chicken.top/tags/%E5%8D%9A%E5%BC%88/"/>
    
  </entry>
  
  <entry>
    <title>大一下三月月赛总结</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/rating2-1/"/>
    <id>http://fried-chicken.top/[object Object]/rating2-1/</id>
    <published>2019-03-30T17:22:56.000Z</published>
    <updated>2019-03-30T17:28:13.047Z</updated>
    
    <content type="html"><![CDATA[<h1 id="比赛情况"><a href="#比赛情况" class="headerlink" title="比赛情况"></a>比赛情况</h1><p><img src="/[object Object]/rating2-1/1.png" alt="1"><br><img src="/[object Object]/rating2-1/2.png" alt="2"></p><p><strong> solved 4 out of 13 </strong></p><h2 id="排名：-14-87"><a href="#排名：-14-87" class="headerlink" title="排名：   14/87"></a>排名：   14/87</h2><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p><strong> <font color="green">AC</font>题目 </strong>：A、E、F、L；<br><strong> <font color="red">WA/TLE</font>……题目 </strong>：C、M；</p><p>打得比较一般的一次吧，感觉这次虽然有不少超出我智商范围的题目，但是A五道题应该还是比较现实的，然而只拿了四个AC QAQ</p><p>开局看A是博弈疯狂莽，出了贼多次错，罚时瞬间上去了，但好在似乎别人也都疯狂莽A（？），过了A之后发现了本场真正的签到题（L），果断A掉。然后扫了一圈，发现F是个二分，感觉可做，于是WA一次（二分右界开小了）之后A掉，接着发现E是个简单的单源bfs，奈何bfs写得不太熟，花了不少时间，而且还很蠢的没有处理障碍（没错，我没有处理障碍物就能过样例）WA了一次之后A了。</p><p>然后觉得M蛮有意思的，又没人写，抱着拿一血的心态写起了M，于是写到了第四个小时，WA了十次……心态彻底崩了，果断放弃。</p><p>这时终于开始弄C了，其实之前反复读题的时候读到C，想了好几次C的做法，虽然感觉C应该是简单题，但就是不知道怎么写，现在硬着头皮写C，用暴力写了一个，然后加了一些可能是假的优化，果然TLE了，最后，发呆了五六分钟，比赛结束。</p><p>其实这场打得不是很开森，但是想到这场比赛是面向全校招募的，还有30多个路人大哥经历了五个小时只写出一题/一题都没写出来的比赛，他们心态肯定超级爆炸，就感觉开森了起来（哇，我素质好低啊）。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;比赛情况&quot;&gt;&lt;a href=&quot;#比赛情况&quot; class=&quot;headerlink&quot; title=&quot;比赛情况&quot;&gt;&lt;/a&gt;比赛情况&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/[object Object]/rating2-1/1.png&quot; alt=&quot;1&quot;&gt;&lt;br&gt;&lt;img s
      
    
    </summary>
    
      <category term="大一下三月月赛" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/"/>
    
      <category term="总结" scheme="http://fried-chicken.top/categories/%E5%A4%A7%E4%B8%80%E4%B8%8B%E4%B8%89%E6%9C%88%E6%9C%88%E8%B5%9B/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="总结" scheme="http://fried-chicken.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>J：Lylist 与魔法卡牌 Episode. 2</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/2018zj-j/"/>
    <id>http://fried-chicken.top/[object Object]/2018zj-j/</id>
    <published>2019-03-30T16:50:28.000Z</published>
    <updated>2019-05-29T18:03:34.790Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：Unattemped; </strong><br><strong> 补题状态：<font color="green">AC</font>(+<font color="red">2</font>); </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/2018zj-j/1.png" alt="1"><br><img src="/[object Object]/2018zj-j/2.png" alt="2"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>看这篇题解的标签数量也知道这题不是什么善茬orz</p><p>我们用动态规划的思维来考虑这个问题，假设前k个数对应的答案是ans，那么前k+1个数对应的答案为 ans+（以前k个数中比a[k+1]小的所有数中最大的那个数结尾的非递减序列数目，这句话一口气说完好累orz，您读的时候仔细断下句），所以，如果我们可以存下（以前k个数中比a[k+1]小的所有数中最大的那个数结尾的非递减序列数目）的话，这个问题就可以解决。</p><p>因此，我们考虑定义映射数组s，这个数组的第k个元素代表（当前以k结尾的非递减序列的数目），以第二组样例为例，在读入五个数的过程中，s数组是这样变化的：<br>s[10]=1<br>s[20]=2<br>s[10]=3 (= 1(第三个10自己)+1(s[10]更新前的值)+1（s[10]更新前的值后面再加上第四个10组成的新序列） )<br>s[10]=7<br>s[10]=15</p><p>最后的答案是s中所有非0元素之和，即17。<br>当然这个例子比较特殊，出现了很多个10，更一般的，当我们读入一个数k，那么s[k]=1（只有自己）+ s[k]（s[k]当前的值） + sum（k-1）（前k-1个数结尾的序列总共有多少个，这些序列最后加上k都是满足要求的船新序列）。最后，求s数组所有元素和即为答案（因为s数组所有元素即是所有的以不同数字结尾的、满足条件的序列）</p><p>但是，上述过程中出现了sum，因此直接写会O（n²）超时，使用树状数组或线段树优化，可以达到O（nlogn）的复杂度，顺利通过。</p><p>代码（树状数组版）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">lb</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> pos ,<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(pos&lt;=<span class="number">100001</span>)&#123;</span><br><span class="line">a[pos]+=x;</span><br><span class="line">a[pos]%=mod;</span><br><span class="line">pos+=lb(pos);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(pos)&#123;</span><br><span class="line">ans+=a[pos];</span><br><span class="line">ans%=mod;</span><br><span class="line">pos-=lb(pos);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">int</span> sit=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line">sit++;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tmp;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;tmp);</span><br><span class="line">add(tmp,sum(tmp));</span><br><span class="line">a[tmp]%=mod;</span><br><span class="line">add(tmp,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case %d: %lld\n"</span>,sit,sum(<span class="number">100001</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：Unattemped; &lt;/strong&gt;&lt;br&gt;&lt;strong&gt; 补题状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+&lt;font color=&quot;red&quot;&gt;2&lt;/font&gt;); &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目
      
    
    </summary>
    
      <category term="2018寒假算法总结赛" scheme="http://fried-chicken.top/categories/2018%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E8%B5%9B/"/>
    
      <category term="J：Lylist 与魔法卡牌 Episode. 2" scheme="http://fried-chicken.top/categories/2018%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E8%B5%9B/J%EF%BC%9ALylist-%E4%B8%8E%E9%AD%94%E6%B3%95%E5%8D%A1%E7%89%8C-Episode-2/"/>
    
    
      <category term="树状数组" scheme="http://fried-chicken.top/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
      <category term="线段树" scheme="http://fried-chicken.top/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="dp" scheme="http://fried-chicken.top/tags/dp/"/>
    
      <category term="映射数组" scheme="http://fried-chicken.top/tags/%E6%98%A0%E5%B0%84%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>K：coachyang1000 的传说</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/2018zj-k/"/>
    <id>http://fried-chicken.top/[object Object]/2018zj-k/</id>
    <published>2019-03-28T17:50:28.000Z</published>
    <updated>2019-03-28T17:53:17.486Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+) at 0:37; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/2018zj-k/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>是水题本题了。</p><p>不过发现好多水题都喜欢让你写个结构，然后结合一下sort函数，这题也不例外。</p><p>sort真的是好用又重要，实是签到必备之函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">prb</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> val[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> _val)</span></span>&#123;</span><br><span class="line">sort(val,val+<span class="number">5</span>);</span><br><span class="line"><span class="keyword">if</span>(val[<span class="number">0</span>]&lt;=_val)&#123;</span><br><span class="line">sum-=val[<span class="number">0</span>];</span><br><span class="line">val[<span class="number">0</span>]=_val;</span><br><span class="line">sum+=val[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">prb</span> <span class="title">prb</span>[1010];</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,prb[i].name);</span><br><span class="line"><span class="keyword">int</span> tmp;</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>( !<span class="built_in">strcmp</span>(prb[i].name,prb[j].name) )&#123;</span><br><span class="line">prb[j].add(tmp);</span><br><span class="line">prb[i].sum=<span class="number">0</span>;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line">prb[i].add(tmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">ans+=prb[i].sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="built_in">memset</span>(prb,<span class="number">0</span>,<span class="keyword">sizeof</span>(prb));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+) at 0:37; &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerlink&quot; title=&quot;题目：&quot;&gt;&lt;/a&gt;题目：&lt;
      
    
    </summary>
    
      <category term="2018寒假算法总结赛" scheme="http://fried-chicken.top/categories/2018%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E8%B5%9B/"/>
    
      <category term="K：coachyang1000 的传说" scheme="http://fried-chicken.top/categories/2018%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E8%B5%9B/K%EF%BC%9Acoachyang1000-%E7%9A%84%E4%BC%A0%E8%AF%B4/"/>
    
    
      <category term="水题" scheme="http://fried-chicken.top/tags/%E6%B0%B4%E9%A2%98/"/>
    
      <category term="排序" scheme="http://fried-chicken.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="模拟" scheme="http://fried-chicken.top/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>F：Teammates and Red Envelopes</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/2018zj-f/"/>
    <id>http://fried-chicken.top/[object Object]/2018zj-f/</id>
    <published>2019-03-28T17:28:28.000Z</published>
    <updated>2019-03-28T17:45:54.123Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+<font color="red">2</font>) at 2:30; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/2018zj-f/1.png" alt="1"><br><img src="/[object Object]/2018zj-f/2.png" alt="2"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>算是我这场比赛在赛时做出来的最难的一道题了吧（虽然回过头来看也并不是很难orz）。</p><p>题目的意思大概是，有这么两个人，想要很多红包，于是输入数据的前两个数为他们要的红包数。</p><p>然后，你拥有从1~x的编号连续的红包，但这俩人有点挑剔，他们分别不要编号可以被P1、P2整除的红包。</p><p>所以题目就是输入他俩各要几个红包以及上述P1、P2，求你需要准备的红包数x最小为多少。</p><p>最自然的想法当然是从1开始分发红包，发到两个人都满足要求为止，但由于数据范围在1e9，这样显然会超时。</p><p>所以，我们考虑二分本题的答案。</p><p>现在，我们已经二分好了一个答案，如何判断它是否符合要求？</p><p>请看程序中注释hhhh</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> N1,N2,P1,P2;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> c,lft,rht;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//freopen("team.in","r",stdin);</span></span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld"</span>,&amp;N1,&amp;N2,&amp;P1,&amp;P2))&#123;</span><br><span class="line">lft=<span class="number">0</span>,rht=<span class="number">100000000000000</span>;<span class="comment">//rht范围一定要开大大大大大！！！为此还WA了一发</span></span><br><span class="line"><span class="keyword">while</span>(rht-lft&gt;<span class="number">1</span>)&#123;</span><br><span class="line">c=(lft+rht)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> div1=c/P1,div2=c/P2,div12=c/(P1*P2);</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> csave=c;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> now1,now2;</span><br><span class="line"><span class="keyword">if</span>(P1!=P2)&#123;</span><br><span class="line">csave-=(div1+div2-div12);</span><br><span class="line"><span class="comment">//现在的csave是两个人都可以拿的红包</span></span><br><span class="line">now1=div2-div12;now2=div1-div12;</span><br><span class="line"><span class="comment">//now1表示第一个人可以拿而第二个人不能拿的红包数，now2同理</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="comment">//特判P1==P2的情况</span></span><br><span class="line">csave-=div1;</span><br><span class="line">now1=<span class="number">0</span>;now2=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(now1&gt;N1)</span><br><span class="line">now1=N1;<span class="comment">//now1发给一号之后就没有了，因为不能发给二号</span></span><br><span class="line"><span class="keyword">if</span>(now2&gt;N2)</span><br><span class="line">now2=N2;</span><br><span class="line"><span class="keyword">if</span>(csave+now1+now2&gt;=N1+N2)&#123;<span class="comment">//如果上述三部分加起来满足两人的要求，缩小答案上界</span></span><br><span class="line">rht=c;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="comment">//否则，缩小下界</span></span><br><span class="line">lft=c;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,rht);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+&lt;font color=&quot;red&quot;&gt;2&lt;/font&gt;) at 2:30; &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;header
      
    
    </summary>
    
      <category term="2018寒假算法总结赛" scheme="http://fried-chicken.top/categories/2018%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E8%B5%9B/"/>
    
      <category term="F：Teammates and Red Envelopes" scheme="http://fried-chicken.top/categories/2018%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E8%B5%9B/F%EF%BC%9ATeammates-and-Red-Envelopes/"/>
    
    
      <category term="二分" scheme="http://fried-chicken.top/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="数论" scheme="http://fried-chicken.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>E：一起去划船</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/2018zj-e/"/>
    <id>http://fried-chicken.top/[object Object]/2018zj-e/</id>
    <published>2019-03-27T17:28:28.000Z</published>
    <updated>2019-03-27T17:40:59.261Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+) at 0:19; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/2018zj-e/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p><strong> 贪心大法好！ </strong><br>是一道久违的贪心题呢，不过真的好水啊orz。<br>根据小学数学的经验，我们把小姐姐按照时间从小到大排序，然后再一个一个过就行了，不开心的不让划，开心的就开心的划去吧~~~<br>啊对了，小心题目的数据范围，因为最大的中间变量会达到1e14，所以要用 long long 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">sort(a,a+n);</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sum=a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(sum&lt;=a[i])&#123; </span><br><span class="line">ans++;</span><br><span class="line">sum+=a[i];</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+) at 0:19; &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerlink&quot; title=&quot;题目：&quot;&gt;&lt;/a&gt;题目：&lt;
      
    
    </summary>
    
      <category term="2018寒假算法总结赛" scheme="http://fried-chicken.top/categories/2018%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E8%B5%9B/"/>
    
      <category term="E： 一起去划船" scheme="http://fried-chicken.top/categories/2018%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E8%B5%9B/E%EF%BC%9A-%E4%B8%80%E8%B5%B7%E5%8E%BB%E5%88%92%E8%88%B9/"/>
    
    
      <category term="水题" scheme="http://fried-chicken.top/tags/%E6%B0%B4%E9%A2%98/"/>
    
      <category term="贪心" scheme="http://fried-chicken.top/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>D： 关灯</title>
    <link href="http://fried-chicken.top/%5Bobject%20Object%5D/2018zj-d/"/>
    <id>http://fried-chicken.top/[object Object]/2018zj-d/</id>
    <published>2019-03-27T17:04:28.000Z</published>
    <updated>2019-03-27T17:40:49.717Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+) at 1:05; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/2018zj-d/1.png" alt="1"><br><img src="/[object Object]/2018zj-d/2.png" alt="2"><br><img src="/[object Object]/2018zj-d/3.png" alt="3"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p><strong> 关灯的核心就是枚举第一行！ </strong><br>这题里样例数T的范围在2e5以下，首先我们注意到每个位置碰两次等价于没碰，所以每个位置的状态只有碰一次或没碰。<br>所以，对每一个样例，我们一共有2的16次方种操作。但显然T再乘个2的十六次方会疯狂超时。<br>这里，就需要了解一下关灯问题的套路了：枚举第一行！<br>原理是这样的，对于第一行的操作，一共只有2的4次方种，即16种，而操作完第一行之后，为了确保第一行的灯关掉（划重点！），第二行的操作是唯一确定的（例如第一行第二个为开，则第二行第二个必须操作一次关掉第一行第二个）。<br>这也就是说，只要我们把第一行的操作定下来了之后，之后的12个格子的操作就都是确定的了，即每一行都优先灭掉上面一行，根据这个，我们只需要16T的运算就可以解决问题。</p><p>但是，其实这也不是最好的做法（但这次可以过，因为数据比较水orz）；</p><p>最快的正确做法是！打表！<br>没错，每个棋盘状态唯一对应一个二进制数，我们只需要另写一个程序预处理好所有状况的可能，在询问时直接查询问状态所对应的二进制数的事先预处理的值就可以了。</p><p>当然，我写的就是第一种方法，水过去了，打表懒得补了ORZ。</p><h3 id="程序："><a href="#程序：" class="headerlink" title="程序："></a>程序：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">char</span> mp[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> mpsave[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inmap</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;=<span class="number">0</span>||x&gt;=<span class="number">5</span>||y&lt;=<span class="number">0</span>||y&gt;=<span class="number">5</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span> <span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>( inmap(x,y) )</span><br><span class="line">mp[x][y]=<span class="number">81</span>-mp[x][y];</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">change(x,y);</span><br><span class="line">change(x,y+<span class="number">1</span>);</span><br><span class="line">change(x,y<span class="number">-1</span>);</span><br><span class="line">change(x+<span class="number">1</span>,y);</span><br><span class="line">change(x<span class="number">-1</span>,y);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s%s%s"</span>,&amp;mp[<span class="number">1</span>][<span class="number">1</span>],&amp;mp[<span class="number">2</span>][<span class="number">1</span>],&amp;mp[<span class="number">3</span>][<span class="number">1</span>],&amp;mp[<span class="number">4</span>][<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">mpsave[i][j]=mp[i][j];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">1000</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> q=<span class="number">0</span>;q&lt;=<span class="number">1</span>;q++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> w=<span class="number">0</span>;w&lt;=<span class="number">1</span>;w++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> e=<span class="number">0</span>;e&lt;=<span class="number">1</span>;e++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> r=<span class="number">0</span>;r&lt;=<span class="number">1</span>;r++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">mp[i][j]=mpsave[i][j];</span><br><span class="line"><span class="keyword">int</span> anssave=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(q)&#123;</span><br><span class="line">push(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">anssave++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(w)&#123;</span><br><span class="line">push(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">anssave++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(e)&#123;</span><br><span class="line">push(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">anssave++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(r)&#123;</span><br><span class="line">push(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line">anssave++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">2</span>;x&lt;=<span class="number">4</span>;x++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">1</span>;y&lt;=<span class="number">4</span>;y++)&#123;</span><br><span class="line"><span class="keyword">if</span>(mp[x<span class="number">-1</span>][y]==<span class="string">'#'</span>)&#123;</span><br><span class="line">push(x,y);</span><br><span class="line">anssave++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> is_close=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">4</span>;x&gt;=<span class="number">1</span>;x--)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">4</span>;y&gt;=<span class="number">1</span>;y--)&#123;</span><br><span class="line"><span class="keyword">if</span>(mp[x][y]==<span class="string">'#'</span>)&#123;</span><br><span class="line">is_close=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(is_close&amp;&amp;ans&gt;anssave)</span><br><span class="line">ans=anssave;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans==<span class="number">1000</span>?<span class="number">-1</span>:ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 赛时状态：&lt;font color=&quot;green&quot;&gt;AC&lt;/font&gt;(+) at 1:05; &lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerlink&quot; title=&quot;题目：&quot;&gt;&lt;/a&gt;题目：&lt;
      
    
    </summary>
    
      <category term="2018寒假算法总结赛" scheme="http://fried-chicken.top/categories/2018%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E8%B5%9B/"/>
    
      <category term="D： 关灯" scheme="http://fried-chicken.top/categories/2018%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E8%B5%9B/D%EF%BC%9A-%E5%85%B3%E7%81%AF/"/>
    
    
      <category term="二进制" scheme="http://fried-chicken.top/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
      <category term="打表" scheme="http://fried-chicken.top/tags/%E6%89%93%E8%A1%A8/"/>
    
  </entry>
  
</feed>
