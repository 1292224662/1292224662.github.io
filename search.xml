<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C. 良心出题人又来啦 ！</title>
      <link href="/%5Bobject%20Object%5D/rating2-1-c/"/>
      <url>/%5Bobject%20Object%5D/rating2-1-c/</url>
      
        <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="red">TLE</font>(+3); </strong></p><p><strong> 补题状态：<font color="green">AC</font>(+1); </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/rating2-1-c/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>这题做得我这次比赛心态很差……看到大家一个个都A了这道题，自己却怎么也想不到方法，贼难受</p><p>赛后才知道，这题过了的大部分是用了线性筛…..我也想过，但感觉3e7的数据量铁定MLE啊，于是并没有写</p><p>结果！3e7的int数组，居然正好是127MB左右？？？？？然后大家就都这么莽过了？？？</p><p>但看出题人的意思，似乎这并不是他的本意？搞不清楚了orz</p><p>赛后补题，为了表达我对线性筛的深仇大恨，我写了一个区间打表，每100000存一个数据，然后对于每次询问的l、r，我一次要处理的数据运算量就不会超过2e5了，可喜可贺</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打表程序省略</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> s[<span class="number">400</span>];</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(b==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line"><span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n=<span class="built_in">sqrt</span>(p);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n+<span class="number">1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(p%i)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">1</span>;a*a&lt;=r;a++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> b=a;;b++)&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tmp=(<span class="keyword">long</span> <span class="keyword">long</span>)a*a+b*b;</span><br><span class="line"><span class="keyword">if</span>(tmp&lt;l)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(tmp&gt;r)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(gcd(b,a)==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span>(is_prime(tmp))&#123;</span><br><span class="line"><span class="comment">//cout&lt;&lt;tmp&lt;&lt;endl;</span></span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">s[<span class="number">1</span>]=<span class="number">4784</span>;</span><br><span class="line">s[<span class="number">2</span>]=<span class="number">4194</span>;</span><br><span class="line">s[<span class="number">3</span>]=<span class="number">4003</span>;</span><br><span class="line">s[<span class="number">4</span>]=<span class="number">3920</span>;</span><br><span class="line">s[<span class="number">5</span>]=<span class="number">3831</span>;</span><br><span class="line">s[<span class="number">6</span>]=<span class="number">3791</span>;</span><br><span class="line">s[<span class="number">7</span>]=<span class="number">3726</span>;</span><br><span class="line">s[<span class="number">8</span>]=<span class="number">3667</span>;</span><br><span class="line">s[<span class="number">9</span>]=<span class="number">3669</span>;</span><br><span class="line">s[<span class="number">10</span>]=<span class="number">3591</span>;</span><br><span class="line">s[<span class="number">11</span>]=<span class="number">3642</span>;</span><br><span class="line">s[<span class="number">12</span>]=<span class="number">3612</span>;</span><br><span class="line">s[<span class="number">13</span>]=<span class="number">3532</span>;</span><br><span class="line">s[<span class="number">14</span>]=<span class="number">3554</span>;</span><br><span class="line">s[<span class="number">15</span>]=<span class="number">3507</span>;</span><br><span class="line">s[<span class="number">16</span>]=<span class="number">3500</span>;</span><br><span class="line">s[<span class="number">17</span>]=<span class="number">3517</span>;</span><br><span class="line">s[<span class="number">18</span>]=<span class="number">3449</span>;</span><br><span class="line">s[<span class="number">19</span>]=<span class="number">3496</span>;</span><br><span class="line">s[<span class="number">20</span>]=<span class="number">3432</span>;</span><br><span class="line">s[<span class="number">21</span>]=<span class="number">3462</span>;</span><br><span class="line">s[<span class="number">22</span>]=<span class="number">3406</span>;</span><br><span class="line">s[<span class="number">23</span>]=<span class="number">3394</span>;</span><br><span class="line">s[<span class="number">24</span>]=<span class="number">3376</span>;</span><br><span class="line">s[<span class="number">25</span>]=<span class="number">3378</span>;</span><br><span class="line">s[<span class="number">26</span>]=<span class="number">3445</span>;</span><br><span class="line">s[<span class="number">27</span>]=<span class="number">3362</span>;</span><br><span class="line">s[<span class="number">28</span>]=<span class="number">3368</span>;</span><br><span class="line">s[<span class="number">29</span>]=<span class="number">3371</span>;</span><br><span class="line">s[<span class="number">30</span>]=<span class="number">3305</span>;</span><br><span class="line">s[<span class="number">31</span>]=<span class="number">3369</span>;</span><br><span class="line">s[<span class="number">32</span>]=<span class="number">3386</span>;</span><br><span class="line">s[<span class="number">33</span>]=<span class="number">3336</span>;</span><br><span class="line">s[<span class="number">34</span>]=<span class="number">3320</span>;</span><br><span class="line">s[<span class="number">35</span>]=<span class="number">3302</span>;</span><br><span class="line">s[<span class="number">36</span>]=<span class="number">3273</span>;</span><br><span class="line">s[<span class="number">37</span>]=<span class="number">3356</span>;</span><br><span class="line">s[<span class="number">38</span>]=<span class="number">3286</span>;</span><br><span class="line">s[<span class="number">39</span>]=<span class="number">3307</span>;</span><br><span class="line">s[<span class="number">40</span>]=<span class="number">3284</span>;</span><br><span class="line">s[<span class="number">41</span>]=<span class="number">3327</span>;</span><br><span class="line">s[<span class="number">42</span>]=<span class="number">3291</span>;</span><br><span class="line">s[<span class="number">43</span>]=<span class="number">3247</span>;</span><br><span class="line">s[<span class="number">44</span>]=<span class="number">3251</span>;</span><br><span class="line">s[<span class="number">45</span>]=<span class="number">3306</span>;</span><br><span class="line">s[<span class="number">46</span>]=<span class="number">3241</span>;</span><br><span class="line">s[<span class="number">47</span>]=<span class="number">3278</span>;</span><br><span class="line">s[<span class="number">48</span>]=<span class="number">3231</span>;</span><br><span class="line">s[<span class="number">49</span>]=<span class="number">3271</span>;</span><br><span class="line">s[<span class="number">50</span>]=<span class="number">3248</span>;</span><br><span class="line">s[<span class="number">51</span>]=<span class="number">3239</span>;</span><br><span class="line">s[<span class="number">52</span>]=<span class="number">3184</span>;</span><br><span class="line">s[<span class="number">53</span>]=<span class="number">3227</span>;</span><br><span class="line">s[<span class="number">54</span>]=<span class="number">3204</span>;</span><br><span class="line">s[<span class="number">55</span>]=<span class="number">3235</span>;</span><br><span class="line">s[<span class="number">56</span>]=<span class="number">3210</span>;</span><br><span class="line">s[<span class="number">57</span>]=<span class="number">3216</span>;</span><br><span class="line">s[<span class="number">58</span>]=<span class="number">3191</span>;</span><br><span class="line">s[<span class="number">59</span>]=<span class="number">3211</span>;</span><br><span class="line">s[<span class="number">60</span>]=<span class="number">3222</span>;</span><br><span class="line">s[<span class="number">61</span>]=<span class="number">3193</span>;</span><br><span class="line">s[<span class="number">62</span>]=<span class="number">3206</span>;</span><br><span class="line">s[<span class="number">63</span>]=<span class="number">3234</span>;</span><br><span class="line">s[<span class="number">64</span>]=<span class="number">3157</span>;</span><br><span class="line">s[<span class="number">65</span>]=<span class="number">3149</span>;</span><br><span class="line">s[<span class="number">66</span>]=<span class="number">3191</span>;</span><br><span class="line">s[<span class="number">67</span>]=<span class="number">3188</span>;</span><br><span class="line">s[<span class="number">68</span>]=<span class="number">3193</span>;</span><br><span class="line">s[<span class="number">69</span>]=<span class="number">3225</span>;</span><br><span class="line">s[<span class="number">70</span>]=<span class="number">3192</span>;</span><br><span class="line">s[<span class="number">71</span>]=<span class="number">3182</span>;</span><br><span class="line">s[<span class="number">72</span>]=<span class="number">3138</span>;</span><br><span class="line">s[<span class="number">73</span>]=<span class="number">3152</span>;</span><br><span class="line">s[<span class="number">74</span>]=<span class="number">3135</span>;</span><br><span class="line">s[<span class="number">75</span>]=<span class="number">3106</span>;</span><br><span class="line">s[<span class="number">76</span>]=<span class="number">3167</span>;</span><br><span class="line">s[<span class="number">77</span>]=<span class="number">3211</span>;</span><br><span class="line">s[<span class="number">78</span>]=<span class="number">3130</span>;</span><br><span class="line">s[<span class="number">79</span>]=<span class="number">3141</span>;</span><br><span class="line">s[<span class="number">80</span>]=<span class="number">3137</span>;</span><br><span class="line">s[<span class="number">81</span>]=<span class="number">3125</span>;</span><br><span class="line">s[<span class="number">82</span>]=<span class="number">3129</span>;</span><br><span class="line">s[<span class="number">83</span>]=<span class="number">3135</span>;</span><br><span class="line">s[<span class="number">84</span>]=<span class="number">3122</span>;</span><br><span class="line">s[<span class="number">85</span>]=<span class="number">3125</span>;</span><br><span class="line">s[<span class="number">86</span>]=<span class="number">3160</span>;</span><br><span class="line">s[<span class="number">87</span>]=<span class="number">3154</span>;</span><br><span class="line">s[<span class="number">88</span>]=<span class="number">3168</span>;</span><br><span class="line">s[<span class="number">89</span>]=<span class="number">3106</span>;</span><br><span class="line">s[<span class="number">90</span>]=<span class="number">3117</span>;</span><br><span class="line">s[<span class="number">91</span>]=<span class="number">3076</span>;</span><br><span class="line">s[<span class="number">92</span>]=<span class="number">3149</span>;</span><br><span class="line">s[<span class="number">93</span>]=<span class="number">3118</span>;</span><br><span class="line">s[<span class="number">94</span>]=<span class="number">3135</span>;</span><br><span class="line">s[<span class="number">95</span>]=<span class="number">3063</span>;</span><br><span class="line">s[<span class="number">96</span>]=<span class="number">3171</span>;</span><br><span class="line">s[<span class="number">97</span>]=<span class="number">3091</span>;</span><br><span class="line">s[<span class="number">98</span>]=<span class="number">3103</span>;</span><br><span class="line">s[<span class="number">99</span>]=<span class="number">3099</span>;</span><br><span class="line">s[<span class="number">100</span>]=<span class="number">3075</span>;</span><br><span class="line">s[<span class="number">101</span>]=<span class="number">3087</span>;</span><br><span class="line">s[<span class="number">102</span>]=<span class="number">3126</span>;</span><br><span class="line">s[<span class="number">103</span>]=<span class="number">3071</span>;</span><br><span class="line">s[<span class="number">104</span>]=<span class="number">3086</span>;</span><br><span class="line">s[<span class="number">105</span>]=<span class="number">3114</span>;</span><br><span class="line">s[<span class="number">106</span>]=<span class="number">3074</span>;</span><br><span class="line">s[<span class="number">107</span>]=<span class="number">3101</span>;</span><br><span class="line">s[<span class="number">108</span>]=<span class="number">3069</span>;</span><br><span class="line">s[<span class="number">109</span>]=<span class="number">3091</span>;</span><br><span class="line">s[<span class="number">110</span>]=<span class="number">3080</span>;</span><br><span class="line">s[<span class="number">111</span>]=<span class="number">3080</span>;</span><br><span class="line">s[<span class="number">112</span>]=<span class="number">3101</span>;</span><br><span class="line">s[<span class="number">113</span>]=<span class="number">3067</span>;</span><br><span class="line">s[<span class="number">114</span>]=<span class="number">3111</span>;</span><br><span class="line">s[<span class="number">115</span>]=<span class="number">3079</span>;</span><br><span class="line">s[<span class="number">116</span>]=<span class="number">3117</span>;</span><br><span class="line">s[<span class="number">117</span>]=<span class="number">3093</span>;</span><br><span class="line">s[<span class="number">118</span>]=<span class="number">3089</span>;</span><br><span class="line">s[<span class="number">119</span>]=<span class="number">3103</span>;</span><br><span class="line">s[<span class="number">120</span>]=<span class="number">3073</span>;</span><br><span class="line">s[<span class="number">121</span>]=<span class="number">3040</span>;</span><br><span class="line">s[<span class="number">122</span>]=<span class="number">3054</span>;</span><br><span class="line">s[<span class="number">123</span>]=<span class="number">3122</span>;</span><br><span class="line">s[<span class="number">124</span>]=<span class="number">3079</span>;</span><br><span class="line">s[<span class="number">125</span>]=<span class="number">3021</span>;</span><br><span class="line">s[<span class="number">126</span>]=<span class="number">3024</span>;</span><br><span class="line">s[<span class="number">127</span>]=<span class="number">3098</span>;</span><br><span class="line">s[<span class="number">128</span>]=<span class="number">3068</span>;</span><br><span class="line">s[<span class="number">129</span>]=<span class="number">3057</span>;</span><br><span class="line">s[<span class="number">130</span>]=<span class="number">3013</span>;</span><br><span class="line">s[<span class="number">131</span>]=<span class="number">3014</span>;</span><br><span class="line">s[<span class="number">132</span>]=<span class="number">3077</span>;</span><br><span class="line">s[<span class="number">133</span>]=<span class="number">3020</span>;</span><br><span class="line">s[<span class="number">134</span>]=<span class="number">3073</span>;</span><br><span class="line">s[<span class="number">135</span>]=<span class="number">3038</span>;</span><br><span class="line">s[<span class="number">136</span>]=<span class="number">3027</span>;</span><br><span class="line">s[<span class="number">137</span>]=<span class="number">3039</span>;</span><br><span class="line">s[<span class="number">138</span>]=<span class="number">3044</span>;</span><br><span class="line">s[<span class="number">139</span>]=<span class="number">3061</span>;</span><br><span class="line">s[<span class="number">140</span>]=<span class="number">3012</span>;</span><br><span class="line">s[<span class="number">141</span>]=<span class="number">2998</span>;</span><br><span class="line">s[<span class="number">142</span>]=<span class="number">3043</span>;</span><br><span class="line">s[<span class="number">143</span>]=<span class="number">3054</span>;</span><br><span class="line">s[<span class="number">144</span>]=<span class="number">3066</span>;</span><br><span class="line">s[<span class="number">145</span>]=<span class="number">3018</span>;</span><br><span class="line">s[<span class="number">146</span>]=<span class="number">3025</span>;</span><br><span class="line">s[<span class="number">147</span>]=<span class="number">3037</span>;</span><br><span class="line">s[<span class="number">148</span>]=<span class="number">3035</span>;</span><br><span class="line">s[<span class="number">149</span>]=<span class="number">3015</span>;</span><br><span class="line">s[<span class="number">150</span>]=<span class="number">3010</span>;</span><br><span class="line">s[<span class="number">151</span>]=<span class="number">3004</span>;</span><br><span class="line">s[<span class="number">152</span>]=<span class="number">3014</span>;</span><br><span class="line">s[<span class="number">153</span>]=<span class="number">3018</span>;</span><br><span class="line">s[<span class="number">154</span>]=<span class="number">2931</span>;</span><br><span class="line">s[<span class="number">155</span>]=<span class="number">2994</span>;</span><br><span class="line">s[<span class="number">156</span>]=<span class="number">3015</span>;</span><br><span class="line">s[<span class="number">157</span>]=<span class="number">3025</span>;</span><br><span class="line">s[<span class="number">158</span>]=<span class="number">3032</span>;</span><br><span class="line">s[<span class="number">159</span>]=<span class="number">3075</span>;</span><br><span class="line">s[<span class="number">160</span>]=<span class="number">3031</span>;</span><br><span class="line">s[<span class="number">161</span>]=<span class="number">2990</span>;</span><br><span class="line">s[<span class="number">162</span>]=<span class="number">2994</span>;</span><br><span class="line">s[<span class="number">163</span>]=<span class="number">3030</span>;</span><br><span class="line">s[<span class="number">164</span>]=<span class="number">2994</span>;</span><br><span class="line">s[<span class="number">165</span>]=<span class="number">3050</span>;</span><br><span class="line">s[<span class="number">166</span>]=<span class="number">2997</span>;</span><br><span class="line">s[<span class="number">167</span>]=<span class="number">2973</span>;</span><br><span class="line">s[<span class="number">168</span>]=<span class="number">3008</span>;</span><br><span class="line">s[<span class="number">169</span>]=<span class="number">3017</span>;</span><br><span class="line">s[<span class="number">170</span>]=<span class="number">3034</span>;</span><br><span class="line">s[<span class="number">171</span>]=<span class="number">2998</span>;</span><br><span class="line">s[<span class="number">172</span>]=<span class="number">2962</span>;</span><br><span class="line">s[<span class="number">173</span>]=<span class="number">3052</span>;</span><br><span class="line">s[<span class="number">174</span>]=<span class="number">2980</span>;</span><br><span class="line">s[<span class="number">175</span>]=<span class="number">2996</span>;</span><br><span class="line">s[<span class="number">176</span>]=<span class="number">3025</span>;</span><br><span class="line">s[<span class="number">177</span>]=<span class="number">3000</span>;</span><br><span class="line">s[<span class="number">178</span>]=<span class="number">2994</span>;</span><br><span class="line">s[<span class="number">179</span>]=<span class="number">2973</span>;</span><br><span class="line">s[<span class="number">180</span>]=<span class="number">3022</span>;</span><br><span class="line">s[<span class="number">181</span>]=<span class="number">2961</span>;</span><br><span class="line">s[<span class="number">182</span>]=<span class="number">2981</span>;</span><br><span class="line">s[<span class="number">183</span>]=<span class="number">3039</span>;</span><br><span class="line">s[<span class="number">184</span>]=<span class="number">2964</span>;</span><br><span class="line">s[<span class="number">185</span>]=<span class="number">2968</span>;</span><br><span class="line">s[<span class="number">186</span>]=<span class="number">2941</span>;</span><br><span class="line">s[<span class="number">187</span>]=<span class="number">3016</span>;</span><br><span class="line">s[<span class="number">188</span>]=<span class="number">2992</span>;</span><br><span class="line">s[<span class="number">189</span>]=<span class="number">3014</span>;</span><br><span class="line">s[<span class="number">190</span>]=<span class="number">2978</span>;</span><br><span class="line">s[<span class="number">191</span>]=<span class="number">2983</span>;</span><br><span class="line">s[<span class="number">192</span>]=<span class="number">3006</span>;</span><br><span class="line">s[<span class="number">193</span>]=<span class="number">2970</span>;</span><br><span class="line">s[<span class="number">194</span>]=<span class="number">2968</span>;</span><br><span class="line">s[<span class="number">195</span>]=<span class="number">2999</span>;</span><br><span class="line">s[<span class="number">196</span>]=<span class="number">2936</span>;</span><br><span class="line">s[<span class="number">197</span>]=<span class="number">2985</span>;</span><br><span class="line">s[<span class="number">198</span>]=<span class="number">2983</span>;</span><br><span class="line">s[<span class="number">199</span>]=<span class="number">2950</span>;</span><br><span class="line">s[<span class="number">200</span>]=<span class="number">3034</span>;</span><br><span class="line">s[<span class="number">201</span>]=<span class="number">2953</span>;</span><br><span class="line">s[<span class="number">202</span>]=<span class="number">2964</span>;</span><br><span class="line">s[<span class="number">203</span>]=<span class="number">2930</span>;</span><br><span class="line">s[<span class="number">204</span>]=<span class="number">2950</span>;</span><br><span class="line">s[<span class="number">205</span>]=<span class="number">2965</span>;</span><br><span class="line">s[<span class="number">206</span>]=<span class="number">2996</span>;</span><br><span class="line">s[<span class="number">207</span>]=<span class="number">2968</span>;</span><br><span class="line">s[<span class="number">208</span>]=<span class="number">2960</span>;</span><br><span class="line">s[<span class="number">209</span>]=<span class="number">2962</span>;</span><br><span class="line">s[<span class="number">210</span>]=<span class="number">2952</span>;</span><br><span class="line">s[<span class="number">211</span>]=<span class="number">2972</span>;</span><br><span class="line">s[<span class="number">212</span>]=<span class="number">2933</span>;</span><br><span class="line">s[<span class="number">213</span>]=<span class="number">3012</span>;</span><br><span class="line">s[<span class="number">214</span>]=<span class="number">2982</span>;</span><br><span class="line">s[<span class="number">215</span>]=<span class="number">3002</span>;</span><br><span class="line">s[<span class="number">216</span>]=<span class="number">2904</span>;</span><br><span class="line">s[<span class="number">217</span>]=<span class="number">2965</span>;</span><br><span class="line">s[<span class="number">218</span>]=<span class="number">2963</span>;</span><br><span class="line">s[<span class="number">219</span>]=<span class="number">2974</span>;</span><br><span class="line">s[<span class="number">220</span>]=<span class="number">3012</span>;</span><br><span class="line">s[<span class="number">221</span>]=<span class="number">2915</span>;</span><br><span class="line">s[<span class="number">222</span>]=<span class="number">2921</span>;</span><br><span class="line">s[<span class="number">223</span>]=<span class="number">2947</span>;</span><br><span class="line">s[<span class="number">224</span>]=<span class="number">2908</span>;</span><br><span class="line">s[<span class="number">225</span>]=<span class="number">2934</span>;</span><br><span class="line">s[<span class="number">226</span>]=<span class="number">2998</span>;</span><br><span class="line">s[<span class="number">227</span>]=<span class="number">2925</span>;</span><br><span class="line">s[<span class="number">228</span>]=<span class="number">2951</span>;</span><br><span class="line">s[<span class="number">229</span>]=<span class="number">2971</span>;</span><br><span class="line">s[<span class="number">230</span>]=<span class="number">2936</span>;</span><br><span class="line">s[<span class="number">231</span>]=<span class="number">2986</span>;</span><br><span class="line">s[<span class="number">232</span>]=<span class="number">2949</span>;</span><br><span class="line">s[<span class="number">233</span>]=<span class="number">2951</span>;</span><br><span class="line">s[<span class="number">234</span>]=<span class="number">2958</span>;</span><br><span class="line">s[<span class="number">235</span>]=<span class="number">2936</span>;</span><br><span class="line">s[<span class="number">236</span>]=<span class="number">2930</span>;</span><br><span class="line">s[<span class="number">237</span>]=<span class="number">2957</span>;</span><br><span class="line">s[<span class="number">238</span>]=<span class="number">2895</span>;</span><br><span class="line">s[<span class="number">239</span>]=<span class="number">2926</span>;</span><br><span class="line">s[<span class="number">240</span>]=<span class="number">2934</span>;</span><br><span class="line">s[<span class="number">241</span>]=<span class="number">2899</span>;</span><br><span class="line">s[<span class="number">242</span>]=<span class="number">2971</span>;</span><br><span class="line">s[<span class="number">243</span>]=<span class="number">3011</span>;</span><br><span class="line">s[<span class="number">244</span>]=<span class="number">2951</span>;</span><br><span class="line">s[<span class="number">245</span>]=<span class="number">2937</span>;</span><br><span class="line">s[<span class="number">246</span>]=<span class="number">2925</span>;</span><br><span class="line">s[<span class="number">247</span>]=<span class="number">2916</span>;</span><br><span class="line">s[<span class="number">248</span>]=<span class="number">2968</span>;</span><br><span class="line">s[<span class="number">249</span>]=<span class="number">2931</span>;</span><br><span class="line">s[<span class="number">250</span>]=<span class="number">2927</span>;</span><br><span class="line">s[<span class="number">251</span>]=<span class="number">2944</span>;</span><br><span class="line">s[<span class="number">252</span>]=<span class="number">2913</span>;</span><br><span class="line">s[<span class="number">253</span>]=<span class="number">2902</span>;</span><br><span class="line">s[<span class="number">254</span>]=<span class="number">2936</span>;</span><br><span class="line">s[<span class="number">255</span>]=<span class="number">2912</span>;</span><br><span class="line">s[<span class="number">256</span>]=<span class="number">2925</span>;</span><br><span class="line">s[<span class="number">257</span>]=<span class="number">2955</span>;</span><br><span class="line">s[<span class="number">258</span>]=<span class="number">2939</span>;</span><br><span class="line">s[<span class="number">259</span>]=<span class="number">2936</span>;</span><br><span class="line">s[<span class="number">260</span>]=<span class="number">2912</span>;</span><br><span class="line">s[<span class="number">261</span>]=<span class="number">2935</span>;</span><br><span class="line">s[<span class="number">262</span>]=<span class="number">2905</span>;</span><br><span class="line">s[<span class="number">263</span>]=<span class="number">2928</span>;</span><br><span class="line">s[<span class="number">264</span>]=<span class="number">2956</span>;</span><br><span class="line">s[<span class="number">265</span>]=<span class="number">2968</span>;</span><br><span class="line">s[<span class="number">266</span>]=<span class="number">2923</span>;</span><br><span class="line">s[<span class="number">267</span>]=<span class="number">2953</span>;</span><br><span class="line">s[<span class="number">268</span>]=<span class="number">2902</span>;</span><br><span class="line">s[<span class="number">269</span>]=<span class="number">2938</span>;</span><br><span class="line">s[<span class="number">270</span>]=<span class="number">2928</span>;</span><br><span class="line">s[<span class="number">271</span>]=<span class="number">2928</span>;</span><br><span class="line">s[<span class="number">272</span>]=<span class="number">2902</span>;</span><br><span class="line">s[<span class="number">273</span>]=<span class="number">2886</span>;</span><br><span class="line">s[<span class="number">274</span>]=<span class="number">2942</span>;</span><br><span class="line">s[<span class="number">275</span>]=<span class="number">2873</span>;</span><br><span class="line">s[<span class="number">276</span>]=<span class="number">2980</span>;</span><br><span class="line">s[<span class="number">277</span>]=<span class="number">2886</span>;</span><br><span class="line">s[<span class="number">278</span>]=<span class="number">2911</span>;</span><br><span class="line">s[<span class="number">279</span>]=<span class="number">2920</span>;</span><br><span class="line">s[<span class="number">280</span>]=<span class="number">2922</span>;</span><br><span class="line">s[<span class="number">281</span>]=<span class="number">2968</span>;</span><br><span class="line">s[<span class="number">282</span>]=<span class="number">2876</span>;</span><br><span class="line">s[<span class="number">283</span>]=<span class="number">2924</span>;</span><br><span class="line">s[<span class="number">284</span>]=<span class="number">2904</span>;</span><br><span class="line">s[<span class="number">285</span>]=<span class="number">2952</span>;</span><br><span class="line">s[<span class="number">286</span>]=<span class="number">2885</span>;</span><br><span class="line">s[<span class="number">287</span>]=<span class="number">2910</span>;</span><br><span class="line">s[<span class="number">288</span>]=<span class="number">2924</span>;</span><br><span class="line">s[<span class="number">289</span>]=<span class="number">2901</span>;</span><br><span class="line">s[<span class="number">290</span>]=<span class="number">2928</span>;</span><br><span class="line">s[<span class="number">291</span>]=<span class="number">2887</span>;</span><br><span class="line">s[<span class="number">292</span>]=<span class="number">2887</span>;</span><br><span class="line">s[<span class="number">293</span>]=<span class="number">2961</span>;</span><br><span class="line">s[<span class="number">294</span>]=<span class="number">2911</span>;</span><br><span class="line">s[<span class="number">295</span>]=<span class="number">2882</span>;</span><br><span class="line">s[<span class="number">296</span>]=<span class="number">2896</span>;</span><br><span class="line">s[<span class="number">297</span>]=<span class="number">2897</span>;</span><br><span class="line">s[<span class="number">298</span>]=<span class="number">2874</span>;</span><br><span class="line">s[<span class="number">299</span>]=<span class="number">2941</span>;</span><br><span class="line">s[<span class="number">300</span>]=<span class="number">2958</span>;</span><br><span class="line">s[<span class="number">301</span>]=<span class="number">2898</span>;</span><br><span class="line">s[<span class="number">302</span>]=<span class="number">2926</span>;</span><br><span class="line">s[<span class="number">303</span>]=<span class="number">2916</span>;</span><br><span class="line">s[<span class="number">304</span>]=<span class="number">2933</span>;</span><br><span class="line">s[<span class="number">305</span>]=<span class="number">2873</span>;</span><br><span class="line">s[<span class="number">306</span>]=<span class="number">2969</span>;</span><br><span class="line">s[<span class="number">307</span>]=<span class="number">2886</span>;</span><br><span class="line">s[<span class="number">308</span>]=<span class="number">2907</span>;</span><br><span class="line">s[<span class="number">309</span>]=<span class="number">2938</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;l&gt;&gt;r;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> ll=l/<span class="number">1e5</span>,rr=r/<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=ll+<span class="number">1</span>;i&lt;=rr;i++)&#123;</span><br><span class="line">ans+=s[i];</span><br><span class="line">&#125;</span><br><span class="line">ans+=solve(rr*<span class="number">1e5</span>,r);</span><br><span class="line">ans-=solve(ll*<span class="number">1e5</span>,l);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大一下三月月赛 </category>
          
          <category> C. 良心出题人又来啦 ！ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打表 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>D. 小D的递减序列</title>
      <link href="/%5Bobject%20Object%5D/rating2-1-d/"/>
      <url>/%5Bobject%20Object%5D/rating2-1-d/</url>
      
        <content type="html"><![CDATA[<p><strong> 赛时状态：Unattemped;</strong></p><p><strong> 补题状态：<font color="green">AC</font>(+3); </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/rating2-1-d/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>这题其实还是挺像之前的某道题的，所以思路就不说太多啦</p><p><a href="http://fried-chicken.top/categories/2018%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E8%B5%9B/J%EF%BC%9ALylist-%E4%B8%8E%E9%AD%94%E6%B3%95%E5%8D%A1%E7%89%8C-Episode-2/">某道题</a></p><p>特别注意，（a-b）%mod的形式是错的，因为会出现负数，所以一定要记得（a-b+mod）%mod！</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> Li[<span class="number">100010</span>][<span class="number">12</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> mod=<span class="number">1e9</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">lb</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> pos ,<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(pos&lt;=<span class="number">100001</span>)&#123;</span><br><span class="line">Li[pos][num]+=x;</span><br><span class="line">Li[pos][num]%=mod;</span><br><span class="line">pos+=lb(pos);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(pos)&#123;</span><br><span class="line">ans+=Li[pos][num];</span><br><span class="line">ans%=mod;</span><br><span class="line">pos-=lb(pos);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tmp;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;tmp);</span><br><span class="line">update(<span class="number">1</span>,tmp+<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=k;i++)&#123;</span><br><span class="line">update(i,tmp+<span class="number">1</span>,(mod+sum(i<span class="number">-1</span>,<span class="number">100005</span>)-sum(i<span class="number">-1</span>,tmp+<span class="number">1</span>))%mod);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum(k,<span class="number">100005</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大一下三月月赛 </category>
          
          <category> D. 小D的递减序列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
            <tag> 线段树 </tag>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>I. 魔法盒子</title>
      <link href="/%5Bobject%20Object%5D/rating2-1-i/"/>
      <url>/%5Bobject%20Object%5D/rating2-1-i/</url>
      
        <content type="html"><![CDATA[<p><strong> 赛时状态：Unattemped;</strong></p><p><strong> 补题状态：<font color="green">AC</font>(+7); </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/rating2-1-i/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>首先得承认的是。我这个程序写的并不好，因为emmmm，直接上图吧：</p><p><img src="/[object Object]/rating2-1-i/2.png" alt="1"></p><p>没错，这题时限1000ms，我998ms的速度通过了这道题……是真的很极限了orz。</p><p>从思路上来说还是很简单的，只要我们以n²的复杂度预处理好所有串的长度和魔法值，之后的q次询问我们就可以用二分来找到满足要求的最大长度值。</p><p>但问题是，这个过程到处都是问题，到处都在反套路，有很多和我们习惯不一样的写法，详见下面注释。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">6010</span>];</span><br><span class="line"><span class="keyword">int</span> T,l,r,bound,len;</span><br><span class="line"><span class="keyword">int</span> mp[<span class="number">6010</span>][<span class="number">6010</span>];</span><br><span class="line"><span class="comment">//mp[len][mid]表示以mid为中心，len为长度的串魔法值（如果len是偶数，我们规定考虑左侧的那个字符作为中间字符）</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">len=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">memset</span>(mp,<span class="number">-1</span>,<span class="keyword">sizeof</span>(mp));<span class="comment">//-1表示未访问</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;<span class="comment">//奇数长更新 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=len&amp;&amp;i-(j<span class="number">-1</span>)/<span class="number">2</span>&gt;=<span class="number">1</span>&amp;&amp;i+(j<span class="number">-1</span>)/<span class="number">2</span>&lt;=len;j+=<span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(j==<span class="number">1</span>)&#123;</span><br><span class="line">mp[<span class="number">1</span>][i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">mp[j][i]=<span class="built_in">abs</span>(s[i-(j<span class="number">-1</span>)/<span class="number">2</span>]-s[i+(j<span class="number">-1</span>)/<span class="number">2</span>])+mp[j<span class="number">-2</span>][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;<span class="comment">//偶数长更新 </span></span><br><span class="line">mp[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=len&amp;&amp;i+j/<span class="number">2</span>&lt;=len&amp;&amp;i+<span class="number">1</span>-j/<span class="number">2</span>;j+=<span class="number">2</span>)&#123;</span><br><span class="line">mp[j][i]=<span class="built_in">abs</span>(s[i+j/<span class="number">2</span>]-s[i+<span class="number">1</span>-j/<span class="number">2</span>])+mp[j<span class="number">-2</span>][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="comment">//以下是二分部分，本题最大的问题来了——题目要求在子串的头尾删等长的串！</span></span><br><span class="line"><span class="comment">//也就是说，如果询问子串长为8，我们二分得到的答案可能为5，这是不满足要求的</span></span><br><span class="line"><span class="comment">//怎么办呢？我们以询问串长的奇偶性分类讨论</span></span><br><span class="line"><span class="comment">//以奇数为例，任意的一个奇数可以表示为2*n+1，因此我们二分这个n，得到的答案就一定是奇数了</span></span><br><span class="line"><span class="comment">//偶数情况同理</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;l,&amp;r,&amp;bound);</span><br><span class="line"><span class="keyword">if</span>((r-l+<span class="number">1</span>)%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> lft=<span class="number">0</span>,rht=(r-l)/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(rht-lft&gt;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> mid=(lft+rht)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> magic;</span><br><span class="line">magic=mp[<span class="number">2</span>*mid+<span class="number">1</span>][(l+r)/<span class="number">2</span>];</span><br><span class="line"><span class="keyword">if</span>(magic!=<span class="number">-1</span>&amp;&amp;magic&lt;=bound)&#123;</span><br><span class="line">lft=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">rht=mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="number">2</span>*rht<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> lft=<span class="number">0</span>,rht=(r-l+<span class="number">1</span>)/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(rht-lft&gt;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> mid=(lft+rht)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> magic;</span><br><span class="line">magic=mp[<span class="number">2</span>*mid][(l+r<span class="number">-1</span>)/<span class="number">2</span>];</span><br><span class="line"><span class="keyword">if</span>(magic!=<span class="number">-1</span>&amp;&amp;magic&lt;=bound)&#123;</span><br><span class="line">lft=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">rht=mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="number">2</span>*rht<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大一下三月月赛 </category>
          
          <category> I. 魔法盒子 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>E：争夺宇宙魔方</title>
      <link href="/%5Bobject%20Object%5D/rating2-1-e/"/>
      <url>/%5Bobject%20Object%5D/rating2-1-e/</url>
      
        <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+<font color="red">1</font>) at 2:40; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/rating2-1-e/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>以宇宙魔方的所在地为原点，bfs求它到其它所有点的最短距离，只要他到某点的最短距离小于他到Carol的最短距离，就说明这个点上的敌人会先于Carol到达宇宙魔方处，因此这个点上的飞船数就要加到答案上，最后输出答案即可。</p><p>多组样例输入，记得初始化。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x;<span class="keyword">int</span> y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> movex[<span class="number">5</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> movey[<span class="number">5</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="built_in">queue</span>&lt;point&gt;  q;</span><br><span class="line">point beg;</span><br><span class="line">point psave;</span><br><span class="line">point carol;</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="keyword">char</span> mp[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> ene[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&gt;=<span class="number">1</span>&amp;&amp;x&lt;=n&amp;&amp;y&lt;=m&amp;&amp;y&gt;=<span class="number">1</span>&amp;&amp;mp[x][y]!=<span class="string">'T'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">bfs</span><span class="params">( )</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">point p=q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">psave.x=p.x+movex[i];</span><br><span class="line">psave.y=p.y+movey[i];</span><br><span class="line"><span class="keyword">if</span>( ok(psave.x,psave.y)&amp;&amp;!vis[psave.x][psave.y] )&#123;</span><br><span class="line">    q.push(psave);</span><br><span class="line">    dis[psave.x][psave.y]=min(dis[psave.x][psave.y],dis[p.x][p.y]+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">vis[psave.x][psave.y]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m))&#123;</span><br><span class="line"><span class="built_in">memset</span>(mp,<span class="number">0</span>,<span class="keyword">sizeof</span>(mp));</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="built_in">memset</span>(ene,<span class="number">0</span>,<span class="keyword">sizeof</span>(ene));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">100</span>;j++)</span><br><span class="line">dis[i][j]=<span class="number">1e7</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="keyword">char</span> tmp;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;tmp);</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'\n'</span>)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;tmp);</span><br><span class="line">mp[i][j]=tmp;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'E'</span>)&#123;</span><br><span class="line">beg.x=i,beg.y=j;</span><br><span class="line">dis[beg.x][beg.y]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'S'</span>)&#123;</span><br><span class="line">carol.x=i;carol.y=j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tmp&lt;=<span class="string">'9'</span>&amp;&amp;tmp&gt;=<span class="string">'1'</span>)&#123;</span><br><span class="line">ene[i][j]=tmp-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">q.push(beg);</span><br><span class="line">bfs();</span><br><span class="line"><span class="keyword">int</span> time=dis[carol.x][carol.y];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(ene[i][j]&amp;&amp;dis[i][j]&lt;=time)&#123;</span><br><span class="line">ans+=ene[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大一下三月月赛 </category>
          
          <category> E：争夺宇宙魔方 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bfs </tag>
            
            <tag> 搜索 </tag>
            
            <tag> 最短路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>L：肥宅大哭.jpg</title>
      <link href="/%5Bobject%20Object%5D/rating2-1-l/"/>
      <url>/%5Bobject%20Object%5D/rating2-1-l/</url>
      
        <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+<font color="red"></font>) at 1:00; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/rating2-1-l/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>emmm差点没仔细看题，把它当成一个两种费用的背包问题了orz。</p><p>照着题意模拟呗，话说我cmp函数里还考虑了难度相同的情况要优先做耗时短的，现在写题解的时候才发现题目里已经要求不会出现相同的题目难度了。</p><p>哦对，而且long long我开的好像也多余，int够用了，可以说是态度很诚恳地一道签到题了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">int</span> N,M;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ti</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> d;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> t;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(ti pre,ti aft)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(pre.d!=aft.d)</span><br><span class="line"><span class="keyword">return</span> pre.d&lt;aft.d;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> pre.t&lt;aft.t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ti a[<span class="number">110000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">int</span> sit=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tcur=<span class="number">0</span>;</span><br><span class="line">sit++;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;N&gt;&gt;M;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i].d);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i].t);</span><br><span class="line">&#125;</span><br><span class="line">sort(a+<span class="number">1</span>,a+<span class="number">1</span>+N,cmp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(tcur+a[i].t&lt;=M)&#123;</span><br><span class="line">ans++;</span><br><span class="line">tcur+=a[i].t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case %d: %lld\n"</span>,sit,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大一下三月月赛 </category>
          
          <category> L：肥宅大哭.jpg </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 水题 </tag>
            
            <tag> 排序 </tag>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A： Ervin and Joker</title>
      <link href="/%5Bobject%20Object%5D/rating2-1-a/"/>
      <url>/%5Bobject%20Object%5D/rating2-1-a/</url>
      
        <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+<font color="red">4</font>) at 0:42; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/rating2-1-a/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>一开始疯狂读错题，疯狂瞎猜，疯狂WA。</p><p>后来冷静下来，认真的左右互搏手玩了几把，发现规律了，即n=0（没错，n居然可以为0！）、k=1且n%2=1的两种情况显然是先手输，除此之外的情况，只要先手从中间拿1或2个，使得剩下的石子被分成均匀的两堆，那么之后，先手只需要重复后手的动作，便一定可以获胜。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">if</span>(!n)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Joker"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">2</span>)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Ervin"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Joker"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Ervin"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大一下三月月赛 </category>
          
          <category> A： Ervin and Joker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 水题 </tag>
            
            <tag> 博弈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大一下三月月赛总结</title>
      <link href="/%5Bobject%20Object%5D/rating2-1/"/>
      <url>/%5Bobject%20Object%5D/rating2-1/</url>
      
        <content type="html"><![CDATA[<h1 id="比赛情况"><a href="#比赛情况" class="headerlink" title="比赛情况"></a>比赛情况</h1><p><img src="/[object Object]/rating2-1/1.png" alt="1"><br><img src="/[object Object]/rating2-1/2.png" alt="2"></p><p><strong> solved 4 out of 13 </strong></p><h2 id="排名：-14-87"><a href="#排名：-14-87" class="headerlink" title="排名：   14/87"></a>排名：   14/87</h2><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p><strong> <font color="green">AC</font>题目 </strong>：A、E、F、L；<br><strong> <font color="red">WA/TLE</font>……题目 </strong>：C、M；</p><p>打得比较一般的一次吧，感觉这次虽然有不少超出我智商范围的题目，但是A五道题应该还是比较现实的，然而只拿了四个AC QAQ</p><p>开局看A是博弈疯狂莽，出了贼多次错，罚时瞬间上去了，但好在似乎别人也都疯狂莽A（？），过了A之后发现了本场真正的签到题（L），果断A掉。然后扫了一圈，发现F是个二分，感觉可做，于是WA一次（二分右界开小了）之后A掉，接着发现E是个简单的单源bfs，奈何bfs写得不太熟，花了不少时间，而且还很蠢的没有处理障碍（没错，我没有处理障碍物就能过样例）WA了一次之后A了。</p><p>然后觉得M蛮有意思的，又没人写，抱着拿一血的心态写起了M，于是写到了第四个小时，WA了十次……心态彻底崩了，果断放弃。</p><p>这时终于开始弄C了，其实之前反复读题的时候读到C，想了好几次C的做法，虽然感觉C应该是简单题，但就是不知道怎么写，现在硬着头皮写C，用暴力写了一个，然后加了一些可能是假的优化，果然TLE了，最后，发呆了五六分钟，比赛结束。</p><p>其实这场打得不是很开森，但是想到这场比赛是面向全校招募的，还有30多个路人大哥经历了五个小时只写出一题/一题都没写出来的比赛，他们心态肯定超级爆炸，就感觉开森了起来（哇，我素质好低啊）。</p>]]></content>
      
      
      <categories>
          
          <category> 大一下三月月赛 </category>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>J：Lylist 与魔法卡牌 Episode. 2</title>
      <link href="/%5Bobject%20Object%5D/2018zj-j/"/>
      <url>/%5Bobject%20Object%5D/2018zj-j/</url>
      
        <content type="html"><![CDATA[<p><strong> 赛时状态：Unattemped; </strong><br><strong> 补题状态：<font color="green">AC</font>(+<font color="red">2</font>); </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/2018zj-j/1.png" alt="1"><br><img src="/[object Object]/2018zj-j/2.png" alt="2"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>看这篇题解的标签数量也知道这题不是什么善茬orz</p><p>我们用动态规划的思维来考虑这个问题，假设前k个数对应的答案是ans，那么前k+1个数对应的答案为 ans+（以前k个数中比a[k+1]小的所有数中最大的那个数结尾的非递减序列数目，这句话一口气说完好累orz，您读的时候仔细断下句），所以，如果我们可以存下（以前k个数中比a[k+1]小的所有数中最大的那个数结尾的非递减序列数目）的话，这个问题就可以解决。</p><p>因此，我们考虑定义映射数组s，这个数组的第k个元素代表（当前以k结尾的非递减序列的数目），以第二组样例为例，在读入五个数的过程中，s数组是这样变化的：<br>s[10]=1<br>s[20]=2<br>s[10]=3 (= 1(第三个10自己)+1(s[10]更新前的值)+1（s[10]更新前的值后面再加上第四个10组成的新序列） )<br>s[10]=7<br>s[10]=15</p><p>最后的答案是s中所有非0元素之和，即17。<br>当然这个例子比较特殊，出现了很多个10，更一般的，当我们读入一个数k，那么s[k]=1（只有自己）+ s[k]（s[k]当前的值） + sum（k-1）（前k-1个数结尾的序列总共有多少个，这些序列最后加上k都是满足要求的船新序列）。最后，求s数组所有元素和即为答案（因为s数组所有元素即是所有的以不同数字结尾的、满足条件的序列）</p><p>但是，上述过程中出现了sum，因此直接写会O（n²）超时，使用树状数组或线段树优化，可以达到O（nlogn）的复杂度，顺利通过。</p><p>代码（树状数组版）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">lb</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> pos ,<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(pos&lt;=<span class="number">100001</span>)&#123;</span><br><span class="line">a[pos]+=x;</span><br><span class="line">a[pos]%=mod;</span><br><span class="line">pos+=lb(pos);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(pos)&#123;</span><br><span class="line">ans+=a[pos];</span><br><span class="line">ans%=mod;</span><br><span class="line">pos-=lb(pos);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">int</span> sit=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line">sit++;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tmp;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;tmp);</span><br><span class="line">add(tmp,sum(tmp));</span><br><span class="line">a[tmp]%=mod;</span><br><span class="line">add(tmp,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case %d: %lld\n"</span>,sit,sum(<span class="number">100001</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2018寒假算法总结赛 </category>
          
          <category> J：Lylist 与魔法卡牌 Episode. 2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
            <tag> 线段树 </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 映射数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K：coachyang1000 的传说</title>
      <link href="/%5Bobject%20Object%5D/2018zj-k/"/>
      <url>/%5Bobject%20Object%5D/2018zj-k/</url>
      
        <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+) at 0:37; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/2018zj-k/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>是水题本题了。</p><p>不过发现好多水题都喜欢让你写个结构，然后结合一下sort函数，这题也不例外。</p><p>sort真的是好用又重要，实是签到必备之函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">prb</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> val[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> _val)</span></span>&#123;</span><br><span class="line">sort(val,val+<span class="number">5</span>);</span><br><span class="line"><span class="keyword">if</span>(val[<span class="number">0</span>]&lt;=_val)&#123;</span><br><span class="line">sum-=val[<span class="number">0</span>];</span><br><span class="line">val[<span class="number">0</span>]=_val;</span><br><span class="line">sum+=val[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">prb</span> <span class="title">prb</span>[1010];</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,prb[i].name);</span><br><span class="line"><span class="keyword">int</span> tmp;</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>( !<span class="built_in">strcmp</span>(prb[i].name,prb[j].name) )&#123;</span><br><span class="line">prb[j].add(tmp);</span><br><span class="line">prb[i].sum=<span class="number">0</span>;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line">prb[i].add(tmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">ans+=prb[i].sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="built_in">memset</span>(prb,<span class="number">0</span>,<span class="keyword">sizeof</span>(prb));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2018寒假算法总结赛 </category>
          
          <category> K：coachyang1000 的传说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 水题 </tag>
            
            <tag> 排序 </tag>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>F：Teammates and Red Envelopes</title>
      <link href="/%5Bobject%20Object%5D/2018zj-f/"/>
      <url>/%5Bobject%20Object%5D/2018zj-f/</url>
      
        <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+<font color="red">2</font>) at 2:30; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/2018zj-f/1.png" alt="1"><br><img src="/[object Object]/2018zj-f/2.png" alt="2"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>算是我这场比赛在赛时做出来的最难的一道题了吧（虽然回过头来看也并不是很难orz）。</p><p>题目的意思大概是，有这么两个人，想要很多红包，于是输入数据的前两个数为他们要的红包数。</p><p>然后，你拥有从1~x的编号连续的红包，但这俩人有点挑剔，他们分别不要编号可以被P1、P2整除的红包。</p><p>所以题目就是输入他俩各要几个红包以及上述P1、P2，求你需要准备的红包数x最小为多少。</p><p>最自然的想法当然是从1开始分发红包，发到两个人都满足要求为止，但由于数据范围在1e9，这样显然会超时。</p><p>所以，我们考虑二分本题的答案。</p><p>现在，我们已经二分好了一个答案，如何判断它是否符合要求？</p><p>请看程序中注释hhhh</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> N1,N2,P1,P2;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> c,lft,rht;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//freopen("team.in","r",stdin);</span></span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld"</span>,&amp;N1,&amp;N2,&amp;P1,&amp;P2))&#123;</span><br><span class="line">lft=<span class="number">0</span>,rht=<span class="number">100000000000000</span>;<span class="comment">//rht范围一定要开大大大大大！！！为此还WA了一发</span></span><br><span class="line"><span class="keyword">while</span>(rht-lft&gt;<span class="number">1</span>)&#123;</span><br><span class="line">c=(lft+rht)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> div1=c/P1,div2=c/P2,div12=c/(P1*P2);</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> csave=c;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> now1,now2;</span><br><span class="line"><span class="keyword">if</span>(P1!=P2)&#123;</span><br><span class="line">csave-=(div1+div2-div12);</span><br><span class="line"><span class="comment">//现在的csave是两个人都可以拿的红包</span></span><br><span class="line">now1=div2-div12;now2=div1-div12;</span><br><span class="line"><span class="comment">//now1表示第一个人可以拿而第二个人不能拿的红包数，now2同理</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="comment">//特判P1==P2的情况</span></span><br><span class="line">csave-=div1;</span><br><span class="line">now1=<span class="number">0</span>;now2=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(now1&gt;N1)</span><br><span class="line">now1=N1;<span class="comment">//now1发给一号之后就没有了，因为不能发给二号</span></span><br><span class="line"><span class="keyword">if</span>(now2&gt;N2)</span><br><span class="line">now2=N2;</span><br><span class="line"><span class="keyword">if</span>(csave+now1+now2&gt;=N1+N2)&#123;<span class="comment">//如果上述三部分加起来满足两人的要求，缩小答案上界</span></span><br><span class="line">rht=c;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="comment">//否则，缩小下界</span></span><br><span class="line">lft=c;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,rht);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2018寒假算法总结赛 </category>
          
          <category> F：Teammates and Red Envelopes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>E：一起去划船</title>
      <link href="/%5Bobject%20Object%5D/2018zj-e/"/>
      <url>/%5Bobject%20Object%5D/2018zj-e/</url>
      
        <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+) at 0:19; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/2018zj-e/1.png" alt="1"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p><strong> 贪心大法好！ </strong><br>是一道久违的贪心题呢，不过真的好水啊orz。<br>根据小学数学的经验，我们把小姐姐按照时间从小到大排序，然后再一个一个过就行了，不开心的不让划，开心的就开心的划去吧~~~<br>啊对了，小心题目的数据范围，因为最大的中间变量会达到1e14，所以要用 long long 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">sort(a,a+n);</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sum=a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(sum&lt;=a[i])&#123; </span><br><span class="line">ans++;</span><br><span class="line">sum+=a[i];</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2018寒假算法总结赛 </category>
          
          <category> E： 一起去划船 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 水题 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>D： 关灯</title>
      <link href="/%5Bobject%20Object%5D/2018zj-d/"/>
      <url>/%5Bobject%20Object%5D/2018zj-d/</url>
      
        <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="green">AC</font>(+) at 1:05; </strong></p><h1 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h1><p><img src="/[object Object]/2018zj-d/1.png" alt="1"><br><img src="/[object Object]/2018zj-d/2.png" alt="2"><br><img src="/[object Object]/2018zj-d/3.png" alt="3"></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p><strong> 关灯的核心就是枚举第一行！ </strong><br>这题里样例数T的范围在2e5以下，首先我们注意到每个位置碰两次等价于没碰，所以每个位置的状态只有碰一次或没碰。<br>所以，对每一个样例，我们一共有2的16次方种操作。但显然T再乘个2的十六次方会疯狂超时。<br>这里，就需要了解一下关灯问题的套路了：枚举第一行！<br>原理是这样的，对于第一行的操作，一共只有2的4次方种，即16种，而操作完第一行之后，为了确保第一行的灯关掉（划重点！），第二行的操作是唯一确定的（例如第一行第二个为开，则第二行第二个必须操作一次关掉第一行第二个）。<br>这也就是说，只要我们把第一行的操作定下来了之后，之后的12个格子的操作就都是确定的了，即每一行都优先灭掉上面一行，根据这个，我们只需要16T的运算就可以解决问题。</p><p>但是，其实这也不是最好的做法（但这次可以过，因为数据比较水orz）；</p><p>最快的正确做法是！打表！<br>没错，每个棋盘状态唯一对应一个二进制数，我们只需要另写一个程序预处理好所有状况的可能，在询问时直接查询问状态所对应的二进制数的事先预处理的值就可以了。</p><p>当然，我写的就是第一种方法，水过去了，打表懒得补了ORZ。</p><h3 id="程序："><a href="#程序：" class="headerlink" title="程序："></a>程序：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">char</span> mp[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> mpsave[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inmap</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;=<span class="number">0</span>||x&gt;=<span class="number">5</span>||y&lt;=<span class="number">0</span>||y&gt;=<span class="number">5</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span> <span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>( inmap(x,y) )</span><br><span class="line">mp[x][y]=<span class="number">81</span>-mp[x][y];</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">change(x,y);</span><br><span class="line">change(x,y+<span class="number">1</span>);</span><br><span class="line">change(x,y<span class="number">-1</span>);</span><br><span class="line">change(x+<span class="number">1</span>,y);</span><br><span class="line">change(x<span class="number">-1</span>,y);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s%s%s"</span>,&amp;mp[<span class="number">1</span>][<span class="number">1</span>],&amp;mp[<span class="number">2</span>][<span class="number">1</span>],&amp;mp[<span class="number">3</span>][<span class="number">1</span>],&amp;mp[<span class="number">4</span>][<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">mpsave[i][j]=mp[i][j];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">1000</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> q=<span class="number">0</span>;q&lt;=<span class="number">1</span>;q++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> w=<span class="number">0</span>;w&lt;=<span class="number">1</span>;w++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> e=<span class="number">0</span>;e&lt;=<span class="number">1</span>;e++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> r=<span class="number">0</span>;r&lt;=<span class="number">1</span>;r++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">mp[i][j]=mpsave[i][j];</span><br><span class="line"><span class="keyword">int</span> anssave=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(q)&#123;</span><br><span class="line">push(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">anssave++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(w)&#123;</span><br><span class="line">push(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">anssave++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(e)&#123;</span><br><span class="line">push(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">anssave++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(r)&#123;</span><br><span class="line">push(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line">anssave++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">2</span>;x&lt;=<span class="number">4</span>;x++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">1</span>;y&lt;=<span class="number">4</span>;y++)&#123;</span><br><span class="line"><span class="keyword">if</span>(mp[x<span class="number">-1</span>][y]==<span class="string">'#'</span>)&#123;</span><br><span class="line">push(x,y);</span><br><span class="line">anssave++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> is_close=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">4</span>;x&gt;=<span class="number">1</span>;x--)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">4</span>;y&gt;=<span class="number">1</span>;y--)&#123;</span><br><span class="line"><span class="keyword">if</span>(mp[x][y]==<span class="string">'#'</span>)&#123;</span><br><span class="line">is_close=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(is_close&amp;&amp;ans&gt;anssave)</span><br><span class="line">ans=anssave;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans==<span class="number">1000</span>?<span class="number">-1</span>:ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2018寒假算法总结赛 </category>
          
          <category> D： 关灯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二进制 </tag>
            
            <tag> 打表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018寒假算法总结赛总结</title>
      <link href="/%5Bobject%20Object%5D/2018zj/"/>
      <url>/%5Bobject%20Object%5D/2018zj/</url>
      
        <content type="html"><![CDATA[<h1 id="比赛情况"><a href="#比赛情况" class="headerlink" title="比赛情况"></a>比赛情况</h1><h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><table><thead><tr><th>A</th><th>B</th><th>C</th><th>D</th><th>E</th><th>F</th><th>G</th><th>H</th><th>I</th><th>J</th><th>K</th><th>L</th></tr></thead><tbody><tr><td></td><td></td><td><font color="blue">-5</font></td><td><font color="green">65</font></td><td><font color="green">19</font></td><td><font color="green">150(-1)</font></td><td></td><td></td><td></td><td></td><td><font color="green">37</font></td><td></td></tr><tr><td>2.3%</td><td>2.3%</td><td>0.0%</td><td>31.8%</td><td>97.7%</td><td>13.6%</td><td>4.5%</td><td>43.2%</td><td>2.3%</td><td>6.8%</td><td>90.9%</td><td>9.1%</td></tr></tbody></table><p>（第三行是通过率，按人头数计算）<br><strong>solved 4 out of 12</strong></p><h2 id="排名：-7-44"><a href="#排名：-7-44" class="headerlink" title="排名：   7/44"></a>排名：   7/44</h2><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>这场是大一下开学的第一次活动，学长们掏出了一套去年他们集训时做的题，而且引入了真实刺激的“学长数据”——赛时的榜单上可以看到去年的学长们在疯狂过题hhhhhhh。<br>感觉发挥还是ok的，水题都没有太花时间，而且没加罚时，排名也还ok，但是！选择了用最后的两个小时时间来写模拟（C题），我怕是真的石乐志了，最后没写出来，在绝望中结束了比赛ORZ，总之呢，其实也是有我图啊、线段树啊啥的看着就不想写的原因，最后选了个省脑子（其实也并不）的大模拟题来写，如果能重来，我选择做那道线段树水题（H）。</p>]]></content>
      
      
      <categories>
          
          <category> 2018寒假算法总结赛 </category>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C：命令行与文件系统</title>
      <link href="/%5Bobject%20Object%5D/2018zj-c/"/>
      <url>/%5Bobject%20Object%5D/2018zj-c/</url>
      
        <content type="html"><![CDATA[<p><strong> 赛时状态：<font color="red">WA</font>(-5); </strong></p><p><strong> 补题状态：<font color="green">AC</font>(+6); </strong></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h3 id="【问题描述】"><a href="#【问题描述】" class="headerlink" title="【问题描述】"></a>【问题描述】</h3><p>在没有图形用户界面（GUI）的年代，计算机上大都是运行一种被称为“DOS”的基 于文本的操作系统与计算机用户进行交互。随着计算机的发展，即使在图形化界面高度发 达的今天，几乎所有的现代操作系统也保留了与以往类似的一个基于字符的界面执行某些 高度特定化的内容，这个基于字符的界面在今天通常被称为命令行。在 Windows 操作系 统上，承载这个字符界面的程序便是广为人知的 cmd.exe；在 Linux 各大发行版上，承载 这个字符界面的程序有大名鼎鼎的 bash、x-term 等。</p><p>在计算机系统中，硬盘上的文件系统是使用树结构进行组织的，我们不妨称这棵树为 文件系统树。在文件系统树上，一个叶子节点表示一个文件，一个内部节点（非叶子节点）表示一个文件夹（目录）。在 Linux 操作系统上，这棵文件系统树有且仅有一个根节 点，这个根节点代表一个目录，称为 Linux 文件系统的根目录；在 Windows 操作系统上， 这棵文件系统树有可能有多个根节点（因此整个文件系统实质上构成一个森林），根节点的 数量与硬盘分区数量相同。</p><p>例如，在 Windows 操作系统上，假如硬盘上有两个分区：C: 和 D:，那么文件 C:\Windows\System32\cmd.exe 可以看作以 C:\文件夹所对应的节点为根的树上的一个叶子节点，其到根的路径上共有 System32 和 Windows 这两个文件夹节点，分别代表两个文件夹；在 Linux 操作系统上，文件路径：/usr/bin/python3 可以看作以 / 目 录所对应的节点为根节点的文件系统树上的一个叶子节点，其到根的路径上共有 bin 和 usr 这两个节点，分别代表两个目录。下图分别呈现了上述两个示例的可视化树表示，左图为 Windows 示例所对应的树形结构，右图为 Linux 示例所对应的树形结构。 </p><p>在一个文件系统中，一个文件或目录的绝对路径定义为从文件系统树根节点到与这个 文件或文件夹对应的树节点的路径上的节点上的名称使用“\”（ Windows）或“/” （Linux）进行分隔后连接而成的字符串。例如，在上图所示的文件系统树上，cmd.exe 文 件的绝对路径即为 C:\Windows\System32\cmd.exe，python 文件的绝对路径为 /usr/bin/python。一个文件或目录与另一个目录的相对路径定义为从另外一个目录所对应的 节点到这个文件或目录所对应的节点的简单路径上的节点上的名称用“\”（ Windows）或 “/”（ Linux）进行分隔后连接而成的字符串。</p><p><img src="/[object Object]/2018zj-c/1.png" alt="实例"></p><p>例如，在上图所示的文件系统树上，cmd.exe文件相对于 Windows 目录的相对路径为 \System32\cmd.exe，python 文件相对于 bin 目录的 相对路径为 /python。另外，在相对路径中，允许使用 “.” 转义符代表当前目录，“..” 转义符代表当前目录的父目录。例如，假如有另一个文件 /usr/share/include/stdio.h，那么 这个文件相对于 /usr/bin 目录的相对路径即为 ../share/include/stdin.h。其中 .. 代表 bin 目录的父目录，即 usr 目录。 命令行界面都是基于文件系统的。命令行会记录当前的工作目录，命令行做出的所有 操作都是相对于这个工作目录进行的。在 Windows 命令行中，操作目录通常显示在提示符 前方，如下图所示： 在上图所示的命令行窗口中，C:\Windows\System32 便是这个命令行窗口的工作目录。</p><p>现在，需要你编写一个程序，在一个 Linux 文件系统上模拟执行命令行程序中的一小 部分命令。具体地，你需要支持下列四个关于目录的命令的执行： </p><ol><li><p>cd 命令。cd 是 change directory 的缩写，该命令用于更改命令行当前的工作目 录。命令格式为：cd <directory>，其中<directory>为一个相对于当前工作目 录的相对路径或一个绝对路径，该命令表示将当前命令行的工作目录切换到 directory 所指示的目录； </directory></directory></p></li><li><p>mkdir 命令。mkdir 是 make directory 的缩写，该命令用于在当前目录下创建一个 新的目录。命令格式为：mkdir <name>，其中<name>为要创建的目录的名称。 </name></name></p></li><li><p>ls 命令。ls 命令是 list 的缩写，该命令用于打印当前目录中的子目录。命令格式 为：ls。 </p></li><li><p>rm 命令。rm 命令是 remove 的缩写，该命令用于删除一个目录。命令格式为： rm <name>，其中<name>为要删除的目录的名称。</name></name></p></li></ol><p>初始时文件系统为空，即文件系统树上仅有一个根节点，文件系统上仅有一个根目 录。且命令行初始时工作目录为根目录。 </p><h3 id="【输入】"><a href="#【输入】" class="headerlink" title="【输入】"></a>【输入】</h3><p>输入文件包含多组测试数据。请处理到输入文件结尾。 每组测试数据第一行为一个整数 q ，表示要执行的命令的数量； 随后 q 行，每行一个命令，命令格式如上文所述。<br>对于所有的测试数据，保证有 ∑q≤1000 保证每个路径的长度不超过 256 个字符。 数据保证当执行 rm 指令时，当前工作目录不会在待删除的目录下。 数据保证所有路径中不含空白字符。 若一个路径既能被解释为绝对路径也能被解释为相对路径，优先将其解释为绝对路 径；若该路径按照绝对路径进行解释时出现错误，再将该路径按照相对路径进行解释。 所有名称均区分大小写。 </p><h3 id="【输出】"><a href="#【输出】" class="headerlink" title="【输出】"></a>【输出】</h3><p>对于输入中的每个命令，程序应按照如下规则给出输出： </p><ol><li><p>若<directory>表示的目录不存在，cd 命令应输出一行“cd: no such directory”（不输出引号）；否则 cd 命令应在一行上输出“cd: ”，然后输出 <directory>所对应的目录的绝对路径； </directory></directory></p></li><li><p>若当前目录下已经有一个名为<name>的目录，mkdir 命令应输出一行“mkdir: directory already exist”（不输出引号）；否则 mkdir 命令不应该产生任 何输出； </name></p></li><li><p>若当前目录下没有任何子目录，输出一行“ls: (empty directory)”；否则 ls 命令应在一行上按照字典序列出当前目录下的所有子目录名称，目录名称之间 使用空格进行分隔； </p></li><li><p>若当前目录下没有名为<name>的目录，rm 命令应输出一行“rm: no such directory”；否则 rm 命令不应产生任何输出。 若执行命令时发生错误，则应直接忽略该命令，输出错误信息后继续执行下一个命 令。例如，若执行 cd 命令时出现目标目录不存在错误，则应保持当前的工作目录不变，输 出一行错误信息，并继续执行下一个命令。 </name></p></li></ol><h3 id="【样例输入】"><a href="#【样例输入】" class="headerlink" title="【样例输入】"></a>【样例输入】</h3><p>15<br>cd .<br>mkdir bitss<br>cd ./bitss<br>mkdir algorithm<br>mkdir contest<br>cd ..<br>mkdir icpc<br>cd icpc<br>mkdir 2018<br>cd bitss/algorithm<br>cd ../bitss<br>ls<br>cd /<br>ls<br>cd /icpc/2018/beijing/.. </p><h3 id="【样例输出】"><a href="#【样例输出】" class="headerlink" title="【样例输出】"></a>【样例输出】</h3><p>cd: /<br>cd: /bitss<br>cd: /<br>cd: /icpc<br>cd: no such directory<br>cd: /bitss<br>algorithm contest<br>cd: /<br>bitss icpc<br>cd: no such directory </p><h3 id="【样例解释】"><a href="#【样例解释】" class="headerlink" title="【样例解释】"></a>【样例解释】</h3><p>对于最后一条命令：cd /icpc/2018/beijing/..，由于 2018 目录下并没有名为 beijing 的子目录，因此 cd 命令报错。</p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>首先，这道题带给我最大的一个教训是：千万别开模拟题！看着能写出来也别开！我在大概190min时开的这道题，差20min左右的时候写完，然后疯狂提交疯狂WA，最后比赛结束的时候，其实成绩还是不错的，但是这道题真的真的很坏人心情啊！</p><p>咳咳，总之，这题数据不大，用邻接矩阵是一个挺好的办法（虽然似乎有点蠢），注意仔细读题，例如相对路径不加反斜杠是不可以解释为绝对路径的，例如各种操作失败时的输出等等，还有就是之中各种变量的初始化和作用域一定要想清楚呐。</p><p>哦对了，顺带一说，这题赛时疯狂WA的原因赛后找到了：<br>1、我在清空某char数组时写了memset( … , … , sizeof(<strong> char </strong>) ),是的，我写的是char的size；<br>2、没看见这题是多组样例输入，处理了一组我的程序就歇着了ORZ。</p><h3 id="程序："><a href="#程序：" class="headerlink" title="程序："></a>程序：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cata</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">260</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">1</span>;<span class="comment">//新cd的文件的index </span></span><br><span class="line"><span class="keyword">int</span> c = <span class="number">0</span>;<span class="comment">//当前目录的index </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cata</span> <span class="title">a</span>[1010];</span></span><br><span class="line"><span class="keyword">bool</span>g[<span class="number">1010</span>][<span class="number">1010</span>]; <span class="comment">//a[father][son]</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cd</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">300</span>];</span><br><span class="line"><span class="keyword">char</span> save[<span class="number">300</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line"><span class="keyword">int</span> i, csave;</span><br><span class="line"><span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="string">'/'</span>) &#123;</span><br><span class="line">csave = <span class="number">0</span>; i = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">csave = c; i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (; s[i] != <span class="number">0</span>; ) &#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> p = <span class="number">0</span>; p &lt;= <span class="number">296</span>; p++)</span><br><span class="line">save[p] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (s[i] != <span class="string">'/'</span>&amp;&amp;s[i] != <span class="number">0</span>) &#123;</span><br><span class="line">save[j] = s[i];</span><br><span class="line">j++, i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">'/'</span>)</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">strlen</span>(save))</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strlen</span>(save) == <span class="number">1</span> &amp;&amp; save[<span class="number">0</span>] == <span class="string">'.'</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strlen</span>(save) == <span class="number">2</span> &amp;&amp; save[<span class="number">0</span>] == <span class="string">'.'</span>&amp;&amp;save[<span class="number">1</span>] == <span class="string">'.'</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">1005</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (g[i][csave] == <span class="number">1</span>) &#123;</span><br><span class="line">csave = i;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"cd: no such directory\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= <span class="number">1005</span>; k++) &#123;</span><br><span class="line"><span class="keyword">if</span> (g[csave][k] == <span class="number">1</span> &amp;&amp; !<span class="built_in">strcmp</span>(a[k].name, save)) &#123;</span><br><span class="line">csave = k;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"cd: no such directory\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">c = csave;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> where[<span class="number">1005</span>];</span><br><span class="line">csave = c;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"cd: /"</span>);</span><br><span class="line"><span class="keyword">while</span> (csave) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">1005</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (g[i][csave] == <span class="number">1</span>) &#123;</span><br><span class="line">x++;</span><br><span class="line">where[x] = csave;</span><br><span class="line">csave = i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (; x &gt; <span class="number">0</span>; x--) &#123;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, a[where[x]].name);</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"/%s"</span>, a[where[x]].name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mkdir</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">260</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">1005</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (g[c][i] == <span class="number">1</span> &amp;&amp; !<span class="built_in">strcmp</span>(s, a[i].name)) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"mkdir: directory already exist\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">strcpy</span>(a[k].name, s);</span><br><span class="line">g[c][k] = <span class="number">1</span>; k++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ls</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">string</span> tmp[<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">1005</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (g[c][i] == <span class="number">1</span>) &#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">tmp[j] = a[i].name;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sort(tmp, tmp + j);</span><br><span class="line"><span class="keyword">int</span> tmpflag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; j; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (tmpflag) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; tmp[i];</span><br><span class="line">tmpflag--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; tmp[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"ls: (empty directory)"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> c, <span class="keyword">int</span> i)</span> </span>&#123;<span class="comment">//c:当前目录index；i：被删的index </span></span><br><span class="line">g[c][i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">1005</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (g[i][j]) &#123;</span><br><span class="line">del(i, j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(a[i].name, <span class="number">0</span>, <span class="keyword">sizeof</span>(a[i].name));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rm</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">260</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">1005</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (g[c][i] &amp;&amp; !<span class="built_in">strcmp</span>(s, a[i].name)) &#123;</span><br><span class="line">del(c, i);</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"rm: no such directory\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">a[<span class="number">0</span>].name[<span class="number">0</span>] = <span class="string">'/'</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> cmd[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n) &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(g, <span class="number">0</span>, <span class="keyword">sizeof</span>(g));</span><br><span class="line"><span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span>(a));</span><br><span class="line">k = <span class="number">1</span>; c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, cmd);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">strcmp</span>(cmd, <span class="string">"cd"</span>)) &#123;</span><br><span class="line">cd();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">strcmp</span>(cmd, <span class="string">"mkdir"</span>)) &#123;</span><br><span class="line">mkdir();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">strcmp</span>(cmd, <span class="string">"ls"</span>)) &#123;</span><br><span class="line">ls();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">strcmp</span>(cmd, <span class="string">"rm"</span>)) &#123;</span><br><span class="line">rm();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(cmd, <span class="number">0</span>, <span class="keyword">sizeof</span>(cmd));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2018寒假算法总结赛 </category>
          
          <category> C：命令行与文件系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于这个博客的二三事</title>
      <link href="/%5Bobject%20Object%5D/about/"/>
      <url>/%5Bobject%20Object%5D/about/</url>
      
        <content type="html"><![CDATA[<h2 id="关于fried-chicken"><a href="#关于fried-chicken" class="headerlink" title="关于fried-chicken"></a>关于fried-chicken</h2><blockquote><ul><li>fried-chicken是北(he)京(bei)理工大学的18级学生</li><li>fried-chicken误入了学校的ACM-ICPC俱乐部</li><li>fried-chicken真的很菜，所以试图写个记录用的blog</li><li>fried-chicken喜欢吃炸鸡</li><li>所以尽管麦当劳的汉堡吊打肯德基的汉堡，fried-chicken还是会吃肯德基</li><li>特别是<strong>吮指原味鸡</strong></li></ul></blockquote><h2 id="关于这个blog"><a href="#关于这个blog" class="headerlink" title="关于这个blog"></a>关于这个blog</h2><blockquote><ul><li>会不定期（真·不定期）更新算法竞赛的一些题解或笔记</li><li>因为我很菜，所以这个blog功能真的很不完善</li><li>所以如果您需要什么功能时没有找到，不用担心，可能是因为这个功能确实不存在</li><li>也欢迎大嘎关注我的<a href="https://www.zhihu.com/people/zha-zha-32-77/activities" target="_blank" rel="noopener">知乎账号</a></li></ul></blockquote><h2 id="内容导读"><a href="#内容导读" class="headerlink" title="内容导读"></a>内容导读</h2><blockquote><ul><li>本着多开坑的原则，博主会采取先开坑会填坑的写法，所以您将经常看到未完成的内容</li><li>您可以在分类栏中找到一些比赛分类，在每场比赛下，都有一个比赛概况的介绍，会大概写写那些题目被我<font color="green"><strong>AC</strong></font>了之类的</li><li>大多数题目会提供（代码质量很低）的代码，像是这样的：</li></ul></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Hello , World!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>再次强调，我贼菜，可能会有许多说错的地方，欢迎大家在知乎上私信喷我</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
          <category> about </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>炸鸡</title>
      <link href="/%5Bobject%20Object%5D/fried-chicken/"/>
      <url>/%5Bobject%20Object%5D/fried-chicken/</url>
      
        <content type="html"><![CDATA[<p>把隔壁小孩馋哭了</p>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
